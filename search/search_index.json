{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome \u00b6 Check out the SDK reference .","title":"Home"},{"location":"reference/sdk/","text":"Enumerations \u00b6 AttributionNodeType AuthenticationType ConnectionRequirement CurrencyFormat DefaultConnectionType DurationUnit NetworkConnection ParameterType PostSetupType PrecannedDateRange Type ValueHintType ValueType Classes \u00b6 PackDefinitionBuilder StatusCodeError UserVisibleError Interfaces \u00b6 ArraySchema ArrayType BooleanSchema Continuation CurrencySchema DateSchema DateTimeSchema DurationSchema DynamicSyncTableDef EmptyFormulaDef ExecutionContext ExternalPackVersionMetadata FetchRequest FetchResponse Fetcher Format Identity IdentityDefinition Logger MetadataFormulaObjectResultType Network NumberSchema NumericSchema OAuth2Authentication ObjectSchema ObjectSchemaProperty PackDefinition PackFormatMetadata PackFormulaDef PackFormulas PackFormulasMetadata PackVersionDefinition ParamDef ScaleSchema SimpleAutocompleteOption SliderSchema StringSchema SyncExecutionContext SyncFormulaResult SyncTableDef TemporaryBlobStorage TimeSchema WebBasicAuthentication Type aliases \u00b6 Authentication BasicPackDefinition DefaultValueType ExternalObjectPackFormula ExternalPackFormat ExternalPackFormatMetadata ExternalPackFormula ExternalPackFormulas ExternalPackMetadata ExternalSyncTable FetchMethodType Formula GenericDynamicSyncTable GenericObjectSchema GenericSyncFormula GenericSyncFormulaResult GenericSyncTable LoggerParamType MetadataContext MetadataFormula MetadataFormulaResultType ObjectSchemaProperties PackFormulaMetadata PackFormulaResult PackFormulaValue PackId PackMetadata PackSyncTable PackVersionMetadata ParamDefs ParamValues ParamsList Schema SchemaType SystemAuthentication TypedPackFormula Functions \u00b6 assertCondition autocompleteSearchObjects ensureExists ensureNonEmptyString ensureUnreachable generateSchema getQueryParams joinUrl makeAttributionNode makeDynamicSyncTable makeEmptyFormula makeFormula makeMetadataFormula makeObjectSchema makeParameter makeReferenceSchemaFromObjectSchema makeSchema makeSimpleAutocompleteMetadataFormula makeSyncTable makeTranslateObjectFormula newPack simpleAutocomplete withQueryParams","title":"Index"},{"location":"reference/sdk/#enumerations","text":"AttributionNodeType AuthenticationType ConnectionRequirement CurrencyFormat DefaultConnectionType DurationUnit NetworkConnection ParameterType PostSetupType PrecannedDateRange Type ValueHintType ValueType","title":"Enumerations"},{"location":"reference/sdk/#classes","text":"PackDefinitionBuilder StatusCodeError UserVisibleError","title":"Classes"},{"location":"reference/sdk/#interfaces","text":"ArraySchema ArrayType BooleanSchema Continuation CurrencySchema DateSchema DateTimeSchema DurationSchema DynamicSyncTableDef EmptyFormulaDef ExecutionContext ExternalPackVersionMetadata FetchRequest FetchResponse Fetcher Format Identity IdentityDefinition Logger MetadataFormulaObjectResultType Network NumberSchema NumericSchema OAuth2Authentication ObjectSchema ObjectSchemaProperty PackDefinition PackFormatMetadata PackFormulaDef PackFormulas PackFormulasMetadata PackVersionDefinition ParamDef ScaleSchema SimpleAutocompleteOption SliderSchema StringSchema SyncExecutionContext SyncFormulaResult SyncTableDef TemporaryBlobStorage TimeSchema WebBasicAuthentication","title":"Interfaces"},{"location":"reference/sdk/#type-aliases","text":"Authentication BasicPackDefinition DefaultValueType ExternalObjectPackFormula ExternalPackFormat ExternalPackFormatMetadata ExternalPackFormula ExternalPackFormulas ExternalPackMetadata ExternalSyncTable FetchMethodType Formula GenericDynamicSyncTable GenericObjectSchema GenericSyncFormula GenericSyncFormulaResult GenericSyncTable LoggerParamType MetadataContext MetadataFormula MetadataFormulaResultType ObjectSchemaProperties PackFormulaMetadata PackFormulaResult PackFormulaValue PackId PackMetadata PackSyncTable PackVersionMetadata ParamDefs ParamValues ParamsList Schema SchemaType SystemAuthentication TypedPackFormula","title":"Type aliases"},{"location":"reference/sdk/#functions","text":"assertCondition autocompleteSearchObjects ensureExists ensureNonEmptyString ensureUnreachable generateSchema getQueryParams joinUrl makeAttributionNode makeDynamicSyncTable makeEmptyFormula makeFormula makeMetadataFormula makeObjectSchema makeParameter makeReferenceSchemaFromObjectSchema makeSchema makeSimpleAutocompleteMetadataFormula makeSyncTable makeTranslateObjectFormula newPack simpleAutocomplete withQueryParams","title":"Functions"},{"location":"reference/sdk/classes/PackDefinitionBuilder/","text":"Implements \u00b6 BasicPackDefinition Constructors \u00b6 constructor \u00b6 \u2022 new PackDefinitionBuilder ( definition? ) Parameters \u00b6 Name Type definition? Partial < PackVersionDefinition > Defined in \u00b6 builder.ts:51 Properties \u00b6 defaultAuthentication \u00b6 \u2022 Optional defaultAuthentication : Authentication Implementation of \u00b6 BasicPackDefinition.defaultAuthentication Defined in \u00b6 builder.ts:43 formats \u00b6 \u2022 formats : Format [] Implementation of \u00b6 BasicPackDefinition.formats Defined in \u00b6 builder.ts:39 formulaNamespace \u00b6 \u2022 Optional formulaNamespace : string Implementation of \u00b6 BasicPackDefinition.formulaNamespace Defined in \u00b6 builder.ts:47 formulas \u00b6 \u2022 formulas : Formula < ParamDefs >[] Implementation of \u00b6 BasicPackDefinition.formulas Defined in \u00b6 builder.ts:38 networkDomains \u00b6 \u2022 networkDomains : string [] Implementation of \u00b6 BasicPackDefinition.networkDomains Defined in \u00b6 builder.ts:41 syncTables \u00b6 \u2022 syncTables : SyncTable [] Implementation of \u00b6 BasicPackDefinition.syncTables Defined in \u00b6 builder.ts:40 systemConnectionAuthentication \u00b6 \u2022 Optional systemConnectionAuthentication : SystemAuthentication Implementation of \u00b6 BasicPackDefinition.systemConnectionAuthentication Defined in \u00b6 builder.ts:44 version \u00b6 \u2022 Optional version : string Defined in \u00b6 builder.ts:46 Methods \u00b6 addColumnFormat \u00b6 \u25b8 addColumnFormat ( format ): PackDefinitionBuilder Adds a column format definition to this pack. In the web editor, the /ColumnFormat shortcut will insert a snippet of a skeleton format. example pack.addColumnFormat({ name: 'MyColumn', formulaName: 'MyFormula', }); Parameters \u00b6 Name Type format Format Returns \u00b6 PackDefinitionBuilder Defined in \u00b6 builder.ts:180 addDynamicSyncTable \u00b6 \u25b8 addDynamicSyncTable < ParamDefsT >( definition ): PackDefinitionBuilder Adds a dynamic sync table definition to this pack. In the web editor, the /DynamicSyncTable shortcut will insert a snippet of a skeleton sync table. example pack.addDynamicSyncTable({ name: 'MySyncTable', getName: async (context) => { const response = await context.fetcher.fetch({method: 'GET', url: context.sync.dynamicUrl}); return response.body.name; }, getName: async (context) => { const response = await context.fetcher.fetch({method: 'GET', url: context.sync.dynamicUrl}); return response.body.browserLink; }, ... }); Type parameters \u00b6 Name Type ParamDefsT extends ParamDefs Parameters \u00b6 Name Type definition DynamicSyncTableOptions < ParamDefsT > Returns \u00b6 PackDefinitionBuilder Defined in \u00b6 builder.ts:160 addFormula \u00b6 \u25b8 addFormula < ParamDefsT >( definition ): PackDefinitionBuilder Adds a formula definition to this pack. In the web editor, the /Formula shortcut will insert a snippet of a skeleton formula. example pack.addFormula({ resultType: ValueType.String, name: 'MyFormula', description: 'My description.', parameters: [ makeParameter({ type: ParameterType.String, name: 'myParam', description: 'My param description.', }), ], execute: async ([param]) => { return Hello ${param} ; }, }); Type parameters \u00b6 Name Type ParamDefsT extends ParamDefs Parameters \u00b6 Name Type definition FormulaDefinitionV2 < ParamDefsT > Returns \u00b6 PackDefinitionBuilder Defined in \u00b6 builder.ts:94 addNetworkDomain \u00b6 \u25b8 addNetworkDomain (... domain ): PackDefinitionBuilder Adds the domain that this pack makes HTTP requests to. For example, if your pack makes HTTP requests to \"api.example.com\", use \"example.com\" as your network domain. If your pack make HTTP requests, it must declare a network domain, for security purposes. Coda enforces that your pack cannot make requests to any undeclared domains. You are allowed one network domain per pack by default. If your pack needs to connect to multiple domains, contact Coda Support for approval. example pack.addNetworkDomain('example.com'); Parameters \u00b6 Name Type ...domain string [] Returns \u00b6 PackDefinitionBuilder Defined in \u00b6 builder.ts:269 addSyncTable \u00b6 \u25b8 addSyncTable < K , L , ParamDefsT , SchemaT >( __namedParameters ): PackDefinitionBuilder Adds a sync table definition to this pack. In the web editor, the /SyncTable shortcut will insert a snippet of a skeleton sync table. example pack.addSyncTable({ name: 'MySyncTable', identityName: 'EntityName', schema: coda.makeObjectSchema({ ... }), formula: { ... }, }); Type parameters \u00b6 Name Type K extends string L extends string ParamDefsT extends ParamDefs SchemaT extends ObjectSchema < K , L , SchemaT > Parameters \u00b6 Name Type __namedParameters SyncTableOptions < K , L , ParamDefsT , SchemaT > Returns \u00b6 PackDefinitionBuilder Defined in \u00b6 builder.ts:120 setSystemAuthentication \u00b6 \u25b8 setSystemAuthentication ( systemAuthentication ): PackDefinitionBuilder Sets this pack to use authentication provided by you as the maker of this pack. You will need to register credentials to use with this pack. When users use the pack, their requests will be authenticated with those system credentials, they need not register their own account. In the web editor, the /SystemAuthentication shortcut will insert a snippet of a skeleton authentication definition. example pack.setSystemAuthentication({ type: AuthenticationType.HeaderBearerToken, }); Parameters \u00b6 Name Type systemAuthentication SystemAuthenticationDef Returns \u00b6 PackDefinitionBuilder Defined in \u00b6 builder.ts:241 setUserAuthentication \u00b6 \u25b8 setUserAuthentication ( authDef ): PackDefinitionBuilder Sets this pack to use authentication for individual users, using the authentication method is the given definition. Each user will need to register an account in order to use this pack. In the web editor, the /UserAuthentication shortcut will insert a snippet of a skeleton authentication definition. By default, this will set a default connection (account) requirement, making a user account required to invoke all formulas in this pack unless you specify differently on a particular formula. To change the default, you can pass a defaultConnectionRequirement option into this method. example pack.setUserAuthentication({ type: AuthenticationType.HeaderBearerToken, }); Parameters \u00b6 Name Type authDef NoAuthentication & { defaultConnectionRequirement? : ConnectionRequirement } & VariousAuthentication & { defaultConnectionRequirement? : ConnectionRequirement } & Omit < HeaderBearerTokenAuthentication , \"getConnectionName\" | \"getConnectionUserId\" > & { getConnectionName? : MetadataFormulaDef } & { defaultConnectionRequirement? : ConnectionRequirement } & Omit < CodaApiBearerTokenAuthentication , \"getConnectionName\" | \"getConnectionUserId\" > & { getConnectionName? : MetadataFormulaDef } & { defaultConnectionRequirement? : ConnectionRequirement } & Omit < CustomHeaderTokenAuthentication , \"getConnectionName\" | \"getConnectionUserId\" > & { getConnectionName? : MetadataFormulaDef } & { defaultConnectionRequirement? : ConnectionRequirement } & Omit < QueryParamTokenAuthentication , \"getConnectionName\" | \"getConnectionUserId\" > & { getConnectionName? : MetadataFormulaDef } & { defaultConnectionRequirement? : ConnectionRequirement } & Omit < MultiQueryParamTokenAuthentication , \"getConnectionName\" | \"getConnectionUserId\" > & { getConnectionName? : MetadataFormulaDef } & { defaultConnectionRequirement? : ConnectionRequirement } & Omit < OAuth2Authentication , \"getConnectionName\" | \"getConnectionUserId\" > & { getConnectionName? : MetadataFormulaDef } & { defaultConnectionRequirement? : ConnectionRequirement } & Omit < WebBasicAuthentication , \"getConnectionName\" | \"getConnectionUserId\" > & { getConnectionName? : MetadataFormulaDef } & { defaultConnectionRequirement? : ConnectionRequirement } & Omit < AWSSignature4Authentication , \"getConnectionName\" | \"getConnectionUserId\" > & { getConnectionName? : MetadataFormulaDef } & { defaultConnectionRequirement? : ConnectionRequirement } Returns \u00b6 PackDefinitionBuilder Defined in \u00b6 builder.ts:204 setVersion \u00b6 \u25b8 setVersion ( version ): PackDefinitionBuilder Sets the semantic version of this pack version, e.g. '1.2.3' . This is optional, and you only need to provide a version if you are manually doing semantic versioning, or using the CLI. If using the web editor, you can omit this and the web editor will automatically provide an appropriate semantic version each time you build a version. example pack.setVersion('1.2.3'); Parameters \u00b6 Name Type version string Returns \u00b6 PackDefinitionBuilder Defined in \u00b6 builder.ts:285","title":"PackDefinitionBuilder"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#implements","text":"BasicPackDefinition","title":"Implements"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#constructors","text":"","title":"Constructors"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#constructor","text":"\u2022 new PackDefinitionBuilder ( definition? )","title":"constructor"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#properties","text":"","title":"Properties"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#defaultauthentication","text":"\u2022 Optional defaultAuthentication : Authentication","title":"defaultAuthentication"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#formats","text":"\u2022 formats : Format []","title":"formats"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#formulanamespace","text":"\u2022 Optional formulaNamespace : string","title":"formulaNamespace"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#formulas","text":"\u2022 formulas : Formula < ParamDefs >[]","title":"formulas"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#networkdomains","text":"\u2022 networkDomains : string []","title":"networkDomains"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#synctables","text":"\u2022 syncTables : SyncTable []","title":"syncTables"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#systemconnectionauthentication","text":"\u2022 Optional systemConnectionAuthentication : SystemAuthentication","title":"systemConnectionAuthentication"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#version","text":"\u2022 Optional version : string","title":"version"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#methods","text":"","title":"Methods"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#addcolumnformat","text":"\u25b8 addColumnFormat ( format ): PackDefinitionBuilder Adds a column format definition to this pack. In the web editor, the /ColumnFormat shortcut will insert a snippet of a skeleton format. example pack.addColumnFormat({ name: 'MyColumn', formulaName: 'MyFormula', });","title":"addColumnFormat"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#adddynamicsynctable","text":"\u25b8 addDynamicSyncTable < ParamDefsT >( definition ): PackDefinitionBuilder Adds a dynamic sync table definition to this pack. In the web editor, the /DynamicSyncTable shortcut will insert a snippet of a skeleton sync table. example pack.addDynamicSyncTable({ name: 'MySyncTable', getName: async (context) => { const response = await context.fetcher.fetch({method: 'GET', url: context.sync.dynamicUrl}); return response.body.name; }, getName: async (context) => { const response = await context.fetcher.fetch({method: 'GET', url: context.sync.dynamicUrl}); return response.body.browserLink; }, ... });","title":"addDynamicSyncTable"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#addformula","text":"\u25b8 addFormula < ParamDefsT >( definition ): PackDefinitionBuilder Adds a formula definition to this pack. In the web editor, the /Formula shortcut will insert a snippet of a skeleton formula. example pack.addFormula({ resultType: ValueType.String, name: 'MyFormula', description: 'My description.', parameters: [ makeParameter({ type: ParameterType.String, name: 'myParam', description: 'My param description.', }), ], execute: async ([param]) => { return Hello ${param} ; }, });","title":"addFormula"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#addnetworkdomain","text":"\u25b8 addNetworkDomain (... domain ): PackDefinitionBuilder Adds the domain that this pack makes HTTP requests to. For example, if your pack makes HTTP requests to \"api.example.com\", use \"example.com\" as your network domain. If your pack make HTTP requests, it must declare a network domain, for security purposes. Coda enforces that your pack cannot make requests to any undeclared domains. You are allowed one network domain per pack by default. If your pack needs to connect to multiple domains, contact Coda Support for approval. example pack.addNetworkDomain('example.com');","title":"addNetworkDomain"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#addsynctable","text":"\u25b8 addSyncTable < K , L , ParamDefsT , SchemaT >( __namedParameters ): PackDefinitionBuilder Adds a sync table definition to this pack. In the web editor, the /SyncTable shortcut will insert a snippet of a skeleton sync table. example pack.addSyncTable({ name: 'MySyncTable', identityName: 'EntityName', schema: coda.makeObjectSchema({ ... }), formula: { ... }, });","title":"addSyncTable"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#setsystemauthentication","text":"\u25b8 setSystemAuthentication ( systemAuthentication ): PackDefinitionBuilder Sets this pack to use authentication provided by you as the maker of this pack. You will need to register credentials to use with this pack. When users use the pack, their requests will be authenticated with those system credentials, they need not register their own account. In the web editor, the /SystemAuthentication shortcut will insert a snippet of a skeleton authentication definition. example pack.setSystemAuthentication({ type: AuthenticationType.HeaderBearerToken, });","title":"setSystemAuthentication"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#setuserauthentication","text":"\u25b8 setUserAuthentication ( authDef ): PackDefinitionBuilder Sets this pack to use authentication for individual users, using the authentication method is the given definition. Each user will need to register an account in order to use this pack. In the web editor, the /UserAuthentication shortcut will insert a snippet of a skeleton authentication definition. By default, this will set a default connection (account) requirement, making a user account required to invoke all formulas in this pack unless you specify differently on a particular formula. To change the default, you can pass a defaultConnectionRequirement option into this method. example pack.setUserAuthentication({ type: AuthenticationType.HeaderBearerToken, });","title":"setUserAuthentication"},{"location":"reference/sdk/classes/PackDefinitionBuilder/#setversion","text":"\u25b8 setVersion ( version ): PackDefinitionBuilder Sets the semantic version of this pack version, e.g. '1.2.3' . This is optional, and you only need to provide a version if you are manually doing semantic versioning, or using the CLI. If using the web editor, you can omit this and the web editor will automatically provide an appropriate semantic version each time you build a version. example pack.setVersion('1.2.3');","title":"setVersion"},{"location":"reference/sdk/classes/StatusCodeError/","text":"StatusCodeError is a simple version of StatusCodeError in request-promise to keep backwards compatibility. This tries to replicate its exact structure, massaging as necessary to handle the various transforms in our stack. https://github.com/request/promise-core/blob/master/lib/errors.js#L22 Hierarchy \u00b6 Error \u21b3 StatusCodeError Constructors \u00b6 constructor \u00b6 \u2022 new StatusCodeError ( statusCode , body , options , response ) Parameters \u00b6 Name Type statusCode number body any options FetchRequest response StatusCodeErrorResponse Overrides \u00b6 Error.constructor Defined in \u00b6 api.ts:85 Properties \u00b6 body \u00b6 \u2022 body : any Defined in \u00b6 api.ts:80 error \u00b6 \u2022 error : any Defined in \u00b6 api.ts:81 name \u00b6 \u2022 name : string = 'StatusCodeError' Overrides \u00b6 Error.name Defined in \u00b6 api.ts:78 options \u00b6 \u2022 options : FetchRequest Defined in \u00b6 api.ts:82 response \u00b6 \u2022 response : StatusCodeErrorResponse Defined in \u00b6 api.ts:83 statusCode \u00b6 \u2022 statusCode : number Defined in \u00b6 api.ts:79","title":"StatusCodeError"},{"location":"reference/sdk/classes/StatusCodeError/#hierarchy","text":"Error \u21b3 StatusCodeError","title":"Hierarchy"},{"location":"reference/sdk/classes/StatusCodeError/#constructors","text":"","title":"Constructors"},{"location":"reference/sdk/classes/StatusCodeError/#constructor","text":"\u2022 new StatusCodeError ( statusCode , body , options , response )","title":"constructor"},{"location":"reference/sdk/classes/StatusCodeError/#properties","text":"","title":"Properties"},{"location":"reference/sdk/classes/StatusCodeError/#body","text":"\u2022 body : any","title":"body"},{"location":"reference/sdk/classes/StatusCodeError/#error","text":"\u2022 error : any","title":"error"},{"location":"reference/sdk/classes/StatusCodeError/#name","text":"\u2022 name : string = 'StatusCodeError'","title":"name"},{"location":"reference/sdk/classes/StatusCodeError/#options","text":"\u2022 options : FetchRequest","title":"options"},{"location":"reference/sdk/classes/StatusCodeError/#response","text":"\u2022 response : StatusCodeErrorResponse","title":"response"},{"location":"reference/sdk/classes/StatusCodeError/#statuscode","text":"\u2022 statusCode : number","title":"statusCode"},{"location":"reference/sdk/classes/UserVisibleError/","text":"An error whose message will be shown to the end user in the UI when it occurs. If an error is encountered in a formula and you want to describe the error to the end user, throw a UserVisibleError with a user-friendly message and the Coda UI will display the message. Hierarchy \u00b6 Error \u21b3 UserVisibleError Constructors \u00b6 constructor \u00b6 \u2022 new UserVisibleError ( message? , internalError? ) Parameters \u00b6 Name Type message? string internalError? Error Overrides \u00b6 Error.constructor Defined in \u00b6 api.ts:59 Properties \u00b6 internalError \u00b6 \u2022 Readonly internalError : undefined | Error Defined in \u00b6 api.ts:57 isUserVisible \u00b6 \u2022 Readonly isUserVisible : true Defined in \u00b6 api.ts:56","title":"UserVisibleError"},{"location":"reference/sdk/classes/UserVisibleError/#hierarchy","text":"Error \u21b3 UserVisibleError","title":"Hierarchy"},{"location":"reference/sdk/classes/UserVisibleError/#constructors","text":"","title":"Constructors"},{"location":"reference/sdk/classes/UserVisibleError/#constructor","text":"\u2022 new UserVisibleError ( message? , internalError? )","title":"constructor"},{"location":"reference/sdk/classes/UserVisibleError/#properties","text":"","title":"Properties"},{"location":"reference/sdk/classes/UserVisibleError/#internalerror","text":"\u2022 Readonly internalError : undefined | Error","title":"internalError"},{"location":"reference/sdk/classes/UserVisibleError/#isuservisible","text":"\u2022 Readonly isUserVisible : true","title":"isUserVisible"},{"location":"reference/sdk/enums/AttributionNodeType/","text":"Enumeration members \u00b6 Image \u00b6 \u2022 Image = 3 Defined in \u00b6 schema.ts:205 Link \u00b6 \u2022 Link = 2 Defined in \u00b6 schema.ts:204 Text \u00b6 \u2022 Text = 1 Defined in \u00b6 schema.ts:203","title":"AttributionNodeType"},{"location":"reference/sdk/enums/AttributionNodeType/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/AttributionNodeType/#image","text":"\u2022 Image = 3","title":"Image"},{"location":"reference/sdk/enums/AttributionNodeType/#link","text":"\u2022 Link = 2","title":"Link"},{"location":"reference/sdk/enums/AttributionNodeType/#text","text":"\u2022 Text = 1","title":"Text"},{"location":"reference/sdk/enums/AuthenticationType/","text":"Authentication types supported by Coda Packs. Enumeration members \u00b6 CodaApiHeaderBearerToken \u00b6 \u2022 CodaApiHeaderBearerToken = \"CodaApiHeaderBearerToken\" Authenticate using a Coda REST API token, sent as an HTTP header. This is identical to HeaderBearerToken except the user wil be presented with a UI to generate an API token rather than needing to paste an arbitrary API token into a text input. This is primarily for use by Coda-authored packs, as it is only relevant for interacting with the Coda REST API. Defined in \u00b6 types.ts:101 CustomHeaderToken \u00b6 \u2022 CustomHeaderToken = \"CustomHeaderToken\" Authenticate using an HTTP header with a custom name and token prefix that you specify. The header name is defined in the {@link headerName} property. Defined in \u00b6 types.ts:52 HeaderBearerToken \u00b6 \u2022 HeaderBearerToken = \"HeaderBearerToken\" Authenticate using an HTTP header of the form Authorization: Bearer <token> . Defined in \u00b6 types.ts:47 MultiQueryParamToken \u00b6 \u2022 MultiQueryParamToken = \"MultiQueryParamToken\" Authenticate using multiple tokens, each passed as a different URL parameter, e.g. https://example.com/api?param1=token1&param2=token2 The parameter names are defined in the params array property. Defined in \u00b6 types.ts:66 None \u00b6 \u2022 None = \"None\" Indicates this pack does not use authentication. You may also omit an authentication declaration entirely. Defined in \u00b6 types.ts:43 OAuth2 \u00b6 \u2022 OAuth2 = \"OAuth2\" Authenticate using OAuth2. You must specify the authorization URL, token exchange URL, and scopes here as part of the pack definition. You'll provide the application's client ID and client secret in the pack management UI, so that these can be stored securely. The API must use a (largely) standards-compliant implementation of OAuth2. Defined in \u00b6 types.ts:74 QueryParamToken \u00b6 \u2022 QueryParamToken = \"QueryParamToken\" Authenticate using a token that is passed as a URL parameter with each request, e.g. https://example.com/api?paramName=token The parameter name is defined in the {@link paramName} property. Defined in \u00b6 types.ts:59 WebBasic \u00b6 \u2022 WebBasic = \"WebBasic\" Authenticate using HTTP Basic authorization. The user provides a username and password (sometimes optional) which are included as an HTTP header according to the Basic auth standard. See https://en.wikipedia.org/wiki/Basic_access_authentication Defined in \u00b6 types.ts:81","title":"AuthenticationType"},{"location":"reference/sdk/enums/AuthenticationType/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/AuthenticationType/#codaapiheaderbearertoken","text":"\u2022 CodaApiHeaderBearerToken = \"CodaApiHeaderBearerToken\" Authenticate using a Coda REST API token, sent as an HTTP header. This is identical to HeaderBearerToken except the user wil be presented with a UI to generate an API token rather than needing to paste an arbitrary API token into a text input. This is primarily for use by Coda-authored packs, as it is only relevant for interacting with the Coda REST API.","title":"CodaApiHeaderBearerToken"},{"location":"reference/sdk/enums/AuthenticationType/#customheadertoken","text":"\u2022 CustomHeaderToken = \"CustomHeaderToken\" Authenticate using an HTTP header with a custom name and token prefix that you specify. The header name is defined in the {@link headerName} property.","title":"CustomHeaderToken"},{"location":"reference/sdk/enums/AuthenticationType/#headerbearertoken","text":"\u2022 HeaderBearerToken = \"HeaderBearerToken\" Authenticate using an HTTP header of the form Authorization: Bearer <token> .","title":"HeaderBearerToken"},{"location":"reference/sdk/enums/AuthenticationType/#multiqueryparamtoken","text":"\u2022 MultiQueryParamToken = \"MultiQueryParamToken\" Authenticate using multiple tokens, each passed as a different URL parameter, e.g. https://example.com/api?param1=token1&param2=token2 The parameter names are defined in the params array property.","title":"MultiQueryParamToken"},{"location":"reference/sdk/enums/AuthenticationType/#none","text":"\u2022 None = \"None\" Indicates this pack does not use authentication. You may also omit an authentication declaration entirely.","title":"None"},{"location":"reference/sdk/enums/AuthenticationType/#oauth2","text":"\u2022 OAuth2 = \"OAuth2\" Authenticate using OAuth2. You must specify the authorization URL, token exchange URL, and scopes here as part of the pack definition. You'll provide the application's client ID and client secret in the pack management UI, so that these can be stored securely. The API must use a (largely) standards-compliant implementation of OAuth2.","title":"OAuth2"},{"location":"reference/sdk/enums/AuthenticationType/#queryparamtoken","text":"\u2022 QueryParamToken = \"QueryParamToken\" Authenticate using a token that is passed as a URL parameter with each request, e.g. https://example.com/api?paramName=token The parameter name is defined in the {@link paramName} property.","title":"QueryParamToken"},{"location":"reference/sdk/enums/AuthenticationType/#webbasic","text":"\u2022 WebBasic = \"WebBasic\" Authenticate using HTTP Basic authorization. The user provides a username and password (sometimes optional) which are included as an HTTP header according to the Basic auth standard. See https://en.wikipedia.org/wiki/Basic_access_authentication","title":"WebBasic"},{"location":"reference/sdk/enums/ConnectionRequirement/","text":"Enumeration members \u00b6 None \u00b6 \u2022 None = \"none\" Defined in \u00b6 api_types.ts:261 Optional \u00b6 \u2022 Optional = \"optional\" Defined in \u00b6 api_types.ts:262 Required \u00b6 \u2022 Required = \"required\" Defined in \u00b6 api_types.ts:263","title":"ConnectionRequirement"},{"location":"reference/sdk/enums/ConnectionRequirement/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/ConnectionRequirement/#none","text":"\u2022 None = \"none\"","title":"None"},{"location":"reference/sdk/enums/ConnectionRequirement/#optional","text":"\u2022 Optional = \"optional\"","title":"Optional"},{"location":"reference/sdk/enums/ConnectionRequirement/#required","text":"\u2022 Required = \"required\"","title":"Required"},{"location":"reference/sdk/enums/CurrencyFormat/","text":"Enumeration members \u00b6 Accounting \u00b6 \u2022 Accounting = \"accounting\" Defined in \u00b6 schema.ts:95 Currency \u00b6 \u2022 Currency = \"currency\" Defined in \u00b6 schema.ts:94 Financial \u00b6 \u2022 Financial = \"financial\" Defined in \u00b6 schema.ts:96","title":"CurrencyFormat"},{"location":"reference/sdk/enums/CurrencyFormat/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/CurrencyFormat/#accounting","text":"\u2022 Accounting = \"accounting\"","title":"Accounting"},{"location":"reference/sdk/enums/CurrencyFormat/#currency","text":"\u2022 Currency = \"currency\"","title":"Currency"},{"location":"reference/sdk/enums/CurrencyFormat/#financial","text":"\u2022 Financial = \"financial\"","title":"Financial"},{"location":"reference/sdk/enums/DefaultConnectionType/","text":"Ways in which a user account can be used with a doc. Enumeration members \u00b6 ProxyActionsOnly \u00b6 \u2022 ProxyActionsOnly = 3 The account can only be used by the Coda user who set up the account, and only to take actions (i.e. push buttons). Each Coda user that uses the pack will be prompted to connect their own private (AKA proxy) account. Private accounts can't be used to retrieve data, because all users in the doc must be able to retrieve the same data. Defined in \u00b6 types.ts:129 Shared \u00b6 \u2022 Shared = 2 The account can be used by any user in the doc both to retrieve data and to take actions. Defined in \u00b6 types.ts:122 SharedDataOnly \u00b6 \u2022 SharedDataOnly = 1 The account can be used by any user in the a doc, but only to read data. The account can't be used to take actions (i.e. push buttons). Defined in \u00b6 types.ts:118","title":"DefaultConnectionType"},{"location":"reference/sdk/enums/DefaultConnectionType/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/DefaultConnectionType/#proxyactionsonly","text":"\u2022 ProxyActionsOnly = 3 The account can only be used by the Coda user who set up the account, and only to take actions (i.e. push buttons). Each Coda user that uses the pack will be prompted to connect their own private (AKA proxy) account. Private accounts can't be used to retrieve data, because all users in the doc must be able to retrieve the same data.","title":"ProxyActionsOnly"},{"location":"reference/sdk/enums/DefaultConnectionType/#shared","text":"\u2022 Shared = 2 The account can be used by any user in the doc both to retrieve data and to take actions.","title":"Shared"},{"location":"reference/sdk/enums/DefaultConnectionType/#shareddataonly","text":"\u2022 SharedDataOnly = 1 The account can be used by any user in the a doc, but only to read data. The account can't be used to take actions (i.e. push buttons).","title":"SharedDataOnly"},{"location":"reference/sdk/enums/DurationUnit/","text":"Enumeration members \u00b6 Days \u00b6 \u2022 Days = \"days\" Defined in \u00b6 schema.ts:144 Hours \u00b6 \u2022 Hours = \"hours\" Defined in \u00b6 schema.ts:145 Minutes \u00b6 \u2022 Minutes = \"minutes\" Defined in \u00b6 schema.ts:146 Seconds \u00b6 \u2022 Seconds = \"seconds\" Defined in \u00b6 schema.ts:147","title":"DurationUnit"},{"location":"reference/sdk/enums/DurationUnit/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/DurationUnit/#days","text":"\u2022 Days = \"days\"","title":"Days"},{"location":"reference/sdk/enums/DurationUnit/#hours","text":"\u2022 Hours = \"hours\"","title":"Hours"},{"location":"reference/sdk/enums/DurationUnit/#minutes","text":"\u2022 Minutes = \"minutes\"","title":"Minutes"},{"location":"reference/sdk/enums/DurationUnit/#seconds","text":"\u2022 Seconds = \"seconds\"","title":"Seconds"},{"location":"reference/sdk/enums/NetworkConnection/","text":"deprecated use ConnectionRequirement instead Enumeration members \u00b6 None \u00b6 \u2022 None = \"none\" Defined in \u00b6 api_types.ts:268 Optional \u00b6 \u2022 Optional = \"optional\" Defined in \u00b6 api_types.ts:269 Required \u00b6 \u2022 Required = \"required\" Defined in \u00b6 api_types.ts:270","title":"NetworkConnection"},{"location":"reference/sdk/enums/NetworkConnection/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/NetworkConnection/#none","text":"\u2022 None = \"none\"","title":"None"},{"location":"reference/sdk/enums/NetworkConnection/#optional","text":"\u2022 Optional = \"optional\"","title":"Optional"},{"location":"reference/sdk/enums/NetworkConnection/#required","text":"\u2022 Required = \"required\"","title":"Required"},{"location":"reference/sdk/enums/ParameterType/","text":"Enumeration members \u00b6 Boolean \u00b6 \u2022 Boolean = \"boolean\" Defined in \u00b6 api_types.ts:88 BooleanArray \u00b6 \u2022 BooleanArray = \"booleanArray\" Defined in \u00b6 api_types.ts:95 Date \u00b6 \u2022 Date = \"date\" Defined in \u00b6 api_types.ts:89 DateArray \u00b6 \u2022 DateArray = \"dateArray\" Defined in \u00b6 api_types.ts:96 Html \u00b6 \u2022 Html = \"html\" Defined in \u00b6 api_types.ts:90 HtmlArray \u00b6 \u2022 HtmlArray = \"htmlArray \"` Defined in \u00b6 api_types.ts:97 Image \u00b6 \u2022 Image = \"image\" Defined in \u00b6 api_types.ts:91 ImageArray \u00b6 \u2022 ImageArray = \"imageArray\" Defined in \u00b6 api_types.ts:98 Number \u00b6 \u2022 Number = \"number\" Defined in \u00b6 api_types.ts:87 NumberArray \u00b6 \u2022 NumberArray = \"numberArray\" Defined in \u00b6 api_types.ts:94 String \u00b6 \u2022 String = \"string\" Defined in \u00b6 api_types.ts:86 StringArray \u00b6 \u2022 StringArray = \"stringArray\" Defined in \u00b6 api_types.ts:93","title":"ParameterType"},{"location":"reference/sdk/enums/ParameterType/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/ParameterType/#boolean","text":"\u2022 Boolean = \"boolean\"","title":"Boolean"},{"location":"reference/sdk/enums/ParameterType/#booleanarray","text":"\u2022 BooleanArray = \"booleanArray\"","title":"BooleanArray"},{"location":"reference/sdk/enums/ParameterType/#date","text":"\u2022 Date = \"date\"","title":"Date"},{"location":"reference/sdk/enums/ParameterType/#datearray","text":"\u2022 DateArray = \"dateArray\"","title":"DateArray"},{"location":"reference/sdk/enums/ParameterType/#html","text":"\u2022 Html = \"html\"","title":"Html"},{"location":"reference/sdk/enums/ParameterType/#htmlarray","text":"\u2022 HtmlArray = \"htmlArray \"`","title":"HtmlArray"},{"location":"reference/sdk/enums/ParameterType/#image","text":"\u2022 Image = \"image\"","title":"Image"},{"location":"reference/sdk/enums/ParameterType/#imagearray","text":"\u2022 ImageArray = \"imageArray\"","title":"ImageArray"},{"location":"reference/sdk/enums/ParameterType/#number","text":"\u2022 Number = \"number\"","title":"Number"},{"location":"reference/sdk/enums/ParameterType/#numberarray","text":"\u2022 NumberArray = \"numberArray\"","title":"NumberArray"},{"location":"reference/sdk/enums/ParameterType/#string","text":"\u2022 String = \"string\"","title":"String"},{"location":"reference/sdk/enums/ParameterType/#stringarray","text":"\u2022 StringArray = \"stringArray\"","title":"StringArray"},{"location":"reference/sdk/enums/PostSetupType/","text":"Enumeration of post-account-setup step types. See {@link PostSetup}. Enumeration members \u00b6 SetEndpoint \u00b6 \u2022 SetEndpoint = \"SetEndPoint\" See SetEndpoint . Defined in \u00b6 types.ts:186","title":"PostSetupType"},{"location":"reference/sdk/enums/PostSetupType/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/PostSetupType/#setendpoint","text":"\u2022 SetEndpoint = \"SetEndPoint\" See SetEndpoint .","title":"SetEndpoint"},{"location":"reference/sdk/enums/PrecannedDateRange/","text":"Enumeration members \u00b6 Everything \u00b6 \u2022 Everything = \"everything\" Defined in \u00b6 api_types.ts:387 Last30Days \u00b6 \u2022 Last30Days = \"last_30_days\" Defined in \u00b6 api_types.ts:360 Last3Months \u00b6 \u2022 Last3Months = \"last_3_months\" Defined in \u00b6 api_types.ts:363 Last6Months \u00b6 \u2022 Last6Months = \"last_6_months\" Defined in \u00b6 api_types.ts:364 Last7Days \u00b6 \u2022 Last7Days = \"last_7_days\" Defined in \u00b6 api_types.ts:359 LastMonth \u00b6 \u2022 LastMonth = \"last_month\" Defined in \u00b6 api_types.ts:362 LastWeek \u00b6 \u2022 LastWeek = \"last_week\" Defined in \u00b6 api_types.ts:361 LastYear \u00b6 \u2022 LastYear = \"last_year\" Defined in \u00b6 api_types.ts:365 Next30Days \u00b6 \u2022 Next30Days = \"next_30_days\" Defined in \u00b6 api_types.ts:380 Next3Months \u00b6 \u2022 Next3Months = \"next_3_months\" Defined in \u00b6 api_types.ts:383 Next6Months \u00b6 \u2022 Next6Months = \"next_6_months\" Defined in \u00b6 api_types.ts:384 Next7Days \u00b6 \u2022 Next7Days = \"next_7_days\" Defined in \u00b6 api_types.ts:379 NextMonth \u00b6 \u2022 NextMonth = \"next_month\" Defined in \u00b6 api_types.ts:382 NextWeek \u00b6 \u2022 NextWeek = \"next_week\" Defined in \u00b6 api_types.ts:381 NextYear \u00b6 \u2022 NextYear = \"next_year\" Defined in \u00b6 api_types.ts:385 ThisMonth \u00b6 \u2022 ThisMonth = \"this_month\" Defined in \u00b6 api_types.ts:371 ThisMonthStart \u00b6 \u2022 ThisMonthStart = \"this_month_start\" Defined in \u00b6 api_types.ts:372 ThisWeek \u00b6 \u2022 ThisWeek = \"this_week\" Defined in \u00b6 api_types.ts:369 ThisWeekStart \u00b6 \u2022 ThisWeekStart = \"this_week_start\" Defined in \u00b6 api_types.ts:370 ThisYear \u00b6 \u2022 ThisYear = \"this_year\" Defined in \u00b6 api_types.ts:375 ThisYearStart \u00b6 \u2022 ThisYearStart = \"this_year_start\" Defined in \u00b6 api_types.ts:373 Today \u00b6 \u2022 Today = \"today\" Defined in \u00b6 api_types.ts:368 Tomorrow \u00b6 \u2022 Tomorrow = \"tomorrow\" Defined in \u00b6 api_types.ts:378 YearToDate \u00b6 \u2022 YearToDate = \"year_to_date\" Defined in \u00b6 api_types.ts:374 Yesterday \u00b6 \u2022 Yesterday = \"yesterday\" Defined in \u00b6 api_types.ts:358","title":"PrecannedDateRange"},{"location":"reference/sdk/enums/PrecannedDateRange/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/PrecannedDateRange/#everything","text":"\u2022 Everything = \"everything\"","title":"Everything"},{"location":"reference/sdk/enums/PrecannedDateRange/#last30days","text":"\u2022 Last30Days = \"last_30_days\"","title":"Last30Days"},{"location":"reference/sdk/enums/PrecannedDateRange/#last3months","text":"\u2022 Last3Months = \"last_3_months\"","title":"Last3Months"},{"location":"reference/sdk/enums/PrecannedDateRange/#last6months","text":"\u2022 Last6Months = \"last_6_months\"","title":"Last6Months"},{"location":"reference/sdk/enums/PrecannedDateRange/#last7days","text":"\u2022 Last7Days = \"last_7_days\"","title":"Last7Days"},{"location":"reference/sdk/enums/PrecannedDateRange/#lastmonth","text":"\u2022 LastMonth = \"last_month\"","title":"LastMonth"},{"location":"reference/sdk/enums/PrecannedDateRange/#lastweek","text":"\u2022 LastWeek = \"last_week\"","title":"LastWeek"},{"location":"reference/sdk/enums/PrecannedDateRange/#lastyear","text":"\u2022 LastYear = \"last_year\"","title":"LastYear"},{"location":"reference/sdk/enums/PrecannedDateRange/#next30days","text":"\u2022 Next30Days = \"next_30_days\"","title":"Next30Days"},{"location":"reference/sdk/enums/PrecannedDateRange/#next3months","text":"\u2022 Next3Months = \"next_3_months\"","title":"Next3Months"},{"location":"reference/sdk/enums/PrecannedDateRange/#next6months","text":"\u2022 Next6Months = \"next_6_months\"","title":"Next6Months"},{"location":"reference/sdk/enums/PrecannedDateRange/#next7days","text":"\u2022 Next7Days = \"next_7_days\"","title":"Next7Days"},{"location":"reference/sdk/enums/PrecannedDateRange/#nextmonth","text":"\u2022 NextMonth = \"next_month\"","title":"NextMonth"},{"location":"reference/sdk/enums/PrecannedDateRange/#nextweek","text":"\u2022 NextWeek = \"next_week\"","title":"NextWeek"},{"location":"reference/sdk/enums/PrecannedDateRange/#nextyear","text":"\u2022 NextYear = \"next_year\"","title":"NextYear"},{"location":"reference/sdk/enums/PrecannedDateRange/#thismonth","text":"\u2022 ThisMonth = \"this_month\"","title":"ThisMonth"},{"location":"reference/sdk/enums/PrecannedDateRange/#thismonthstart","text":"\u2022 ThisMonthStart = \"this_month_start\"","title":"ThisMonthStart"},{"location":"reference/sdk/enums/PrecannedDateRange/#thisweek","text":"\u2022 ThisWeek = \"this_week\"","title":"ThisWeek"},{"location":"reference/sdk/enums/PrecannedDateRange/#thisweekstart","text":"\u2022 ThisWeekStart = \"this_week_start\"","title":"ThisWeekStart"},{"location":"reference/sdk/enums/PrecannedDateRange/#thisyear","text":"\u2022 ThisYear = \"this_year\"","title":"ThisYear"},{"location":"reference/sdk/enums/PrecannedDateRange/#thisyearstart","text":"\u2022 ThisYearStart = \"this_year_start\"","title":"ThisYearStart"},{"location":"reference/sdk/enums/PrecannedDateRange/#today","text":"\u2022 Today = \"today\"","title":"Today"},{"location":"reference/sdk/enums/PrecannedDateRange/#tomorrow","text":"\u2022 Tomorrow = \"tomorrow\"","title":"Tomorrow"},{"location":"reference/sdk/enums/PrecannedDateRange/#yeartodate","text":"\u2022 YearToDate = \"year_to_date\"","title":"YearToDate"},{"location":"reference/sdk/enums/PrecannedDateRange/#yesterday","text":"\u2022 Yesterday = \"yesterday\"","title":"Yesterday"},{"location":"reference/sdk/enums/Type/","text":"Enumeration members \u00b6 boolean \u00b6 \u2022 boolean = 3 Defined in \u00b6 api_types.ts:10 date \u00b6 \u2022 date = 4 Defined in \u00b6 api_types.ts:11 html \u00b6 \u2022 html = 5 Defined in \u00b6 api_types.ts:12 image \u00b6 \u2022 image = 6 Defined in \u00b6 api_types.ts:13 number \u00b6 \u2022 number = 1 Defined in \u00b6 api_types.ts:8 object \u00b6 \u2022 object = 2 Defined in \u00b6 api_types.ts:9 string \u00b6 \u2022 string = 0 Defined in \u00b6 api_types.ts:7","title":"Type"},{"location":"reference/sdk/enums/Type/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/Type/#boolean","text":"\u2022 boolean = 3","title":"boolean"},{"location":"reference/sdk/enums/Type/#date","text":"\u2022 date = 4","title":"date"},{"location":"reference/sdk/enums/Type/#html","text":"\u2022 html = 5","title":"html"},{"location":"reference/sdk/enums/Type/#image","text":"\u2022 image = 6","title":"image"},{"location":"reference/sdk/enums/Type/#number","text":"\u2022 number = 1","title":"number"},{"location":"reference/sdk/enums/Type/#object","text":"\u2022 object = 2","title":"object"},{"location":"reference/sdk/enums/Type/#string","text":"\u2022 string = 0","title":"string"},{"location":"reference/sdk/enums/ValueHintType/","text":"Synthetic types that instruct Coda how to coerce values from primitives at ingestion time. Enumeration members \u00b6 Attachment \u00b6 \u2022 Attachment = \"attachment\" Defined in \u00b6 schema.ts:41 Currency \u00b6 \u2022 Currency = \"currency\" Defined in \u00b6 schema.ts:33 Date \u00b6 \u2022 Date = \"date\" Defined in \u00b6 schema.ts:27 DateTime \u00b6 \u2022 DateTime = \"datetime\" Defined in \u00b6 schema.ts:29 Duration \u00b6 \u2022 Duration = \"duration\" Defined in \u00b6 schema.ts:30 Embed \u00b6 \u2022 Embed = \"embed\" Defined in \u00b6 schema.ts:39 Html \u00b6 \u2022 Html = \"html\" Defined in \u00b6 schema.ts:38 ImageAttachment \u00b6 \u2022 ImageAttachment = \"imageAttachment\" Defined in \u00b6 schema.ts:35 ImageReference \u00b6 \u2022 ImageReference = \"image\" Defined in \u00b6 schema.ts:34 Markdown \u00b6 \u2022 Markdown = \"markdown\" Defined in \u00b6 schema.ts:37 Percent \u00b6 \u2022 Percent = \"percent\" Defined in \u00b6 schema.ts:32 Person \u00b6 \u2022 Person = \"person\" Defined in \u00b6 schema.ts:31 Reference \u00b6 \u2022 Reference = \"reference\" Defined in \u00b6 schema.ts:40 Scale \u00b6 \u2022 Scale = \"scale\" Defined in \u00b6 schema.ts:43 Slider \u00b6 \u2022 Slider = \"slider\" Defined in \u00b6 schema.ts:42 Time \u00b6 \u2022 Time = \"time\" Defined in \u00b6 schema.ts:28 Url \u00b6 \u2022 Url = \"url\" Defined in \u00b6 schema.ts:36","title":"ValueHintType"},{"location":"reference/sdk/enums/ValueHintType/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/ValueHintType/#attachment","text":"\u2022 Attachment = \"attachment\"","title":"Attachment"},{"location":"reference/sdk/enums/ValueHintType/#currency","text":"\u2022 Currency = \"currency\"","title":"Currency"},{"location":"reference/sdk/enums/ValueHintType/#date","text":"\u2022 Date = \"date\"","title":"Date"},{"location":"reference/sdk/enums/ValueHintType/#datetime","text":"\u2022 DateTime = \"datetime\"","title":"DateTime"},{"location":"reference/sdk/enums/ValueHintType/#duration","text":"\u2022 Duration = \"duration\"","title":"Duration"},{"location":"reference/sdk/enums/ValueHintType/#embed","text":"\u2022 Embed = \"embed\"","title":"Embed"},{"location":"reference/sdk/enums/ValueHintType/#html","text":"\u2022 Html = \"html\"","title":"Html"},{"location":"reference/sdk/enums/ValueHintType/#imageattachment","text":"\u2022 ImageAttachment = \"imageAttachment\"","title":"ImageAttachment"},{"location":"reference/sdk/enums/ValueHintType/#imagereference","text":"\u2022 ImageReference = \"image\"","title":"ImageReference"},{"location":"reference/sdk/enums/ValueHintType/#markdown","text":"\u2022 Markdown = \"markdown\"","title":"Markdown"},{"location":"reference/sdk/enums/ValueHintType/#percent","text":"\u2022 Percent = \"percent\"","title":"Percent"},{"location":"reference/sdk/enums/ValueHintType/#person","text":"\u2022 Person = \"person\"","title":"Person"},{"location":"reference/sdk/enums/ValueHintType/#reference","text":"\u2022 Reference = \"reference\"","title":"Reference"},{"location":"reference/sdk/enums/ValueHintType/#scale","text":"\u2022 Scale = \"scale\"","title":"Scale"},{"location":"reference/sdk/enums/ValueHintType/#slider","text":"\u2022 Slider = \"slider\"","title":"Slider"},{"location":"reference/sdk/enums/ValueHintType/#time","text":"\u2022 Time = \"time\"","title":"Time"},{"location":"reference/sdk/enums/ValueHintType/#url","text":"\u2022 Url = \"url\"","title":"Url"},{"location":"reference/sdk/enums/ValueType/","text":"The set of primitive value types that can be used as return values for formulas or in object schemas. Enumeration members \u00b6 Array \u00b6 \u2022 Array = \"array\" Defined in \u00b6 schema.ts:19 Boolean \u00b6 \u2022 Boolean = \"boolean\" Defined in \u00b6 schema.ts:16 Number \u00b6 \u2022 Number = \"number\" Defined in \u00b6 schema.ts:17 Object \u00b6 \u2022 Object = \"object\" Defined in \u00b6 schema.ts:20 String \u00b6 \u2022 String = \"string\" Defined in \u00b6 schema.ts:18","title":"ValueType"},{"location":"reference/sdk/enums/ValueType/#enumeration-members","text":"","title":"Enumeration members"},{"location":"reference/sdk/enums/ValueType/#array","text":"\u2022 Array = \"array\"","title":"Array"},{"location":"reference/sdk/enums/ValueType/#boolean","text":"\u2022 Boolean = \"boolean\"","title":"Boolean"},{"location":"reference/sdk/enums/ValueType/#number","text":"\u2022 Number = \"number\"","title":"Number"},{"location":"reference/sdk/enums/ValueType/#object","text":"\u2022 Object = \"object\"","title":"Object"},{"location":"reference/sdk/enums/ValueType/#string","text":"\u2022 String = \"string\"","title":"String"},{"location":"reference/sdk/functions/assertCondition/","text":"\u25b8 assertCondition ( condition , message? ): asserts condition Parameters \u00b6 Name Type condition any message? string Returns \u00b6 asserts condition Defined in \u00b6 helpers/ensure.ts:25","title":"assertCondition"},{"location":"reference/sdk/functions/autocompleteSearchObjects/","text":"\u25b8 autocompleteSearchObjects < T >( search , objs , displayKey , valueKey ): Promise < MetadataFormulaObjectResultType []> Type parameters \u00b6 Name T Parameters \u00b6 Name Type search string objs T [] displayKey keyof T valueKey keyof T Returns \u00b6 Promise < MetadataFormulaObjectResultType []> Defined in \u00b6 api.ts:737","title":"autocompleteSearchObjects"},{"location":"reference/sdk/functions/ensureExists/","text":"\u25b8 ensureExists < T >( value , message? ): T Type parameters \u00b6 Name T Parameters \u00b6 Name Type value T | null | undefined message? string Returns \u00b6 T Defined in \u00b6 helpers/ensure.ts:14","title":"ensureExists"},{"location":"reference/sdk/functions/ensureNonEmptyString/","text":"\u25b8 ensureNonEmptyString ( value , message? ): string Parameters \u00b6 Name Type value string | null | undefined message? string Returns \u00b6 string Defined in \u00b6 helpers/ensure.ts:7","title":"ensureNonEmptyString"},{"location":"reference/sdk/functions/ensureUnreachable/","text":"\u25b8 ensureUnreachable ( value , message? ): never Parameters \u00b6 Name Type value never message? string Returns \u00b6 never Defined in \u00b6 helpers/ensure.ts:3","title":"ensureUnreachable"},{"location":"reference/sdk/functions/generateSchema/","text":"\u25b8 generateSchema ( obj ): Schema Parameters \u00b6 Name Type obj ValidTypes Returns \u00b6 Schema Defined in \u00b6 schema.ts:266","title":"generateSchema"},{"location":"reference/sdk/functions/getQueryParams/","text":"\u25b8 getQueryParams ( url ): Object Parameters \u00b6 Name Type url string Returns \u00b6 Object Defined in \u00b6 helpers/url.ts:17","title":"getQueryParams"},{"location":"reference/sdk/functions/joinUrl/","text":"\u25b8 joinUrl (... tokens ): string Joins all the tokens into a single URL string separated by '/'. Zero length tokens cause errors. Parameters \u00b6 Name Type Description ...tokens string [] Zero or more tokens to be combined. If token doesn't end with '/', one will be added as the separator Returns \u00b6 string Defined in \u00b6 helpers/url.ts:27","title":"joinUrl"},{"location":"reference/sdk/functions/makeAttributionNode/","text":"\u25b8 makeAttributionNode < T >( node ): T Type parameters \u00b6 Name Type T extends AttributionNode Parameters \u00b6 Name Type node T Returns \u00b6 T Defined in \u00b6 schema.ts:226","title":"makeAttributionNode"},{"location":"reference/sdk/functions/makeDynamicSyncTable/","text":"\u25b8 makeDynamicSyncTable < K , L , ParamDefsT >( __namedParameters ): DynamicSyncTableDef < K , L , ParamDefsT , any > Type parameters \u00b6 Name Type K extends string L extends string ParamDefsT extends ParamDefs Parameters \u00b6 Name Type __namedParameters Object __namedParameters.connectionRequirement? ConnectionRequirement __namedParameters.entityName? string __namedParameters.formula SyncFormulaDef < ParamDefsT > __namedParameters.getDisplayUrl MetadataFormulaDef __namedParameters.getName MetadataFormulaDef __namedParameters.getSchema MetadataFormulaDef __namedParameters.listDynamicUrls? MetadataFormulaDef __namedParameters.name string Returns \u00b6 DynamicSyncTableDef < K , L , ParamDefsT , any > Defined in \u00b6 api.ts:1009","title":"makeDynamicSyncTable"},{"location":"reference/sdk/functions/makeEmptyFormula/","text":"\u25b8 makeEmptyFormula < ParamDefsT >( definition ): { cacheTtlSecs? : number ; connectionRequirement? : ConnectionRequirement ; description : string ; examples? : { params : PackFormulaValue [] ; result : PackFormulaResult }[] ; extraOAuthScopes? : string [] ; isAction? : boolean ; isExperimental? : boolean ; isSystem? : boolean ; name : string ; network? : Network ; parameters : ParamDefsT ; varargParameters? : ParamDefs } & { execute : ( params : ParamValues < ParamDefsT >, context : ExecutionContext ) => Promise < string > ; resultType : string } Type parameters \u00b6 Name Type ParamDefsT extends ParamDefs Parameters \u00b6 Name Type definition EmptyFormulaDef < ParamDefsT > Returns \u00b6 { cacheTtlSecs? : number ; connectionRequirement? : ConnectionRequirement ; description : string ; examples? : { params : PackFormulaValue [] ; result : PackFormulaResult }[] ; extraOAuthScopes? : string [] ; isAction? : boolean ; isExperimental? : boolean ; isSystem? : boolean ; name : string ; network? : Network ; parameters : ParamDefsT ; varargParameters? : ParamDefs } & { execute : ( params : ParamValues < ParamDefsT >, context : ExecutionContext ) => Promise < string > ; resultType : string } Defined in \u00b6 api.ts:1089","title":"makeEmptyFormula"},{"location":"reference/sdk/functions/makeFormula/","text":"\u25b8 makeFormula < ParamDefsT >( fullDefinition ): Formula < ParamDefsT > Creates a formula definition. You must indicate the kind of value that this formula returns (string, number, boolean, array, or object) using the resultType field. Formulas always return basic types, but you may optionally give a type hint using codaType to tell Coda how to interpret a given value. For example, you can return a string that represents a date, but use codaType: ValueType.Date to tell Coda to interpret as a date in a document. If your formula returns an object, you must provide a schema property that describes the structure of the object. See makeObjectSchema for how to construct an object schema. If your formula returns a list (array), you must provide an items property that describes what the elements of the array are. This could be a simple schema like {type: ValueType.String} indicating that the array elements are all just strings, or it could be an object schema created using makeObjectSchema if the elements are objects. example makeFormula({resultType: ValueType.String, name: 'Hello', ...}); example makeFormula({resultType: ValueType.String, codaType: ValueType.Html, name: 'HelloHtml', ...}); example makeFormula({resultType: ValueType.Array, items: {type: ValueType.String}, name: 'HelloStringArray', ...}); example makeFormula({ resultType: ValueType.Object, schema: makeObjectSchema({type: ValueType.Object, properties: {...}}), name: 'HelloObject', ... }); example makeFormula({ resultType: ValueType.Array, items: makeObjectSchema({type: ValueType.Object, properties: {...}}), name: 'HelloObjectArray', ... }); Type parameters \u00b6 Name Type ParamDefsT extends ParamDefs Parameters \u00b6 Name Type fullDefinition FormulaDefinitionV2 < ParamDefsT > Returns \u00b6 Formula < ParamDefsT > Defined in \u00b6 api.ts:530","title":"makeFormula"},{"location":"reference/sdk/functions/makeMetadataFormula/","text":"\u25b8 makeMetadataFormula ( execute , options? ): MetadataFormula Parameters \u00b6 Name Type execute MetadataFunction options? Object options.connectionRequirement? ConnectionRequirement Returns \u00b6 MetadataFormula Defined in \u00b6 api.ts:684","title":"makeMetadataFormula"},{"location":"reference/sdk/functions/makeObjectSchema/","text":"\u25b8 makeObjectSchema < K , L , T >( schemaDef ): ObjectSchema < K , L > Type parameters \u00b6 Name Type K extends string L extends string T extends ObjectSchemaDefinition < K , L , T > Parameters \u00b6 Name Type schemaDef T Returns \u00b6 ObjectSchema < K , L > Defined in \u00b6 schema.ts:302","title":"makeObjectSchema"},{"location":"reference/sdk/functions/makeParameter/","text":"\u25b8 makeParameter < T >( paramDefinition ): ParamDef < ParameterTypeMap [ T ]> Create a definition for a parameter for a formula or sync. example makeParameter({type: ParameterType.String, name: 'myParam', description: 'My description'}); example makeParameter({type: ParameterType.StringArray, name: 'myArrayParam', description: 'My description'}); Type parameters \u00b6 Name Type T extends ParameterType Parameters \u00b6 Name Type paramDefinition ParameterOptions < T > Returns \u00b6 ParamDef < ParameterTypeMap [ T ]> Defined in \u00b6 api.ts:229","title":"makeParameter"},{"location":"reference/sdk/functions/makeReferenceSchemaFromObjectSchema/","text":"\u25b8 makeReferenceSchemaFromObjectSchema ( schema , identityName? ): GenericObjectSchema Convenience for creating a reference object schema from an existing schema for the object. Copies over the identity, id, and primary from the schema, and the subset of properties indicated by the id and primary. A reference schema can always be defined directly, but if you already have an object schema it provides better code reuse to derive a reference schema instead. Parameters \u00b6 Name Type schema GenericObjectSchema identityName? string Returns \u00b6 GenericObjectSchema Defined in \u00b6 schema.ts:401","title":"makeReferenceSchemaFromObjectSchema"},{"location":"reference/sdk/functions/makeSchema/","text":"\u25b8 makeSchema < T >( schema ): T Type parameters \u00b6 Name Type T extends Schema Parameters \u00b6 Name Type schema T Returns \u00b6 T Defined in \u00b6 schema.ts:296","title":"makeSchema"},{"location":"reference/sdk/functions/makeSimpleAutocompleteMetadataFormula/","text":"\u25b8 makeSimpleAutocompleteMetadataFormula ( options ): MetadataFormula Parameters \u00b6 Name Type options ( string | SimpleAutocompleteOption )[] Returns \u00b6 MetadataFormula Defined in \u00b6 api.ts:754","title":"makeSimpleAutocompleteMetadataFormula"},{"location":"reference/sdk/functions/makeSyncTable/","text":"\u25b8 makeSyncTable < K , L , ParamDefsT , SchemaDefT , SchemaT >( __namedParameters ): SyncTableDef < K , L , ParamDefsT , SchemaT > Wrapper to produce a sync table definition. All (non-dynamic) sync tables should be created using this wrapper rather than declaring a sync table definition object directly. This wrapper does a variety of helpful things, including * Doing basic validation of the provided definition. * Normalizing the schema definition to conform to Coda-recommended syntax. * Wrapping the execute formula to normalize return values to match the normalized schema. See Normalization for more information about schema normalization. Type parameters \u00b6 Name Type K extends string L extends string ParamDefsT extends ParamDefs SchemaDefT extends ObjectSchemaDefinition < K , L , SchemaDefT > SchemaT extends ObjectSchema < K , L , SchemaT > Parameters \u00b6 Name Type __namedParameters SyncTableOptions < K , L , ParamDefsT , SchemaDefT > Returns \u00b6 SyncTableDef < K , L , ParamDefsT , SchemaT > Defined in \u00b6 api.ts:928","title":"makeSyncTable"},{"location":"reference/sdk/functions/makeTranslateObjectFormula/","text":"\u25b8 makeTranslateObjectFormula < ParamDefsT , ResultT >( __namedParameters ): { cacheTtlSecs? : number ; connectionRequirement? : ConnectionRequirement ; description : string ; examples? : { params : PackFormulaValue [] ; result : PackFormulaResult }[] ; extraOAuthScopes? : string [] ; isAction? : boolean ; isExperimental? : boolean ; isSystem? : boolean ; name : string ; network? : Network ; parameters : ParamDefsT ; request : RequestHandlerTemplate ; varargParameters? : ParamDefs } & { execute : ( params : ParamValues < ParamDefsT >, context : ExecutionContext ) => Promise < SchemaType < ResultT >> ; resultType : object ; schema : undefined | ResultT } Type parameters \u00b6 Name Type ParamDefsT extends ParamDefs ResultT extends Schema Parameters \u00b6 Name Type __namedParameters ObjectArrayFormulaDef < ParamDefsT , ResultT > Returns \u00b6 { cacheTtlSecs? : number ; connectionRequirement? : ConnectionRequirement ; description : string ; examples? : { params : PackFormulaValue [] ; result : PackFormulaResult }[] ; extraOAuthScopes? : string [] ; isAction? : boolean ; isExperimental? : boolean ; isSystem? : boolean ; name : string ; network? : Network ; parameters : ParamDefsT ; request : RequestHandlerTemplate ; varargParameters? : ParamDefs } & { execute : ( params : ParamValues < ParamDefsT >, context : ExecutionContext ) => Promise < SchemaType < ResultT >> ; resultType : object ; schema : undefined | ResultT } Defined in \u00b6 api.ts:1060","title":"makeTranslateObjectFormula"},{"location":"reference/sdk/functions/newPack/","text":"\u25b8 newPack ( definition? ): PackDefinitionBuilder Creates a new skeleton pack definition that can be added to. example export const pack = newPack(); pack.addFormula({resultType: ValueType.String, name: 'MyFormula', ...}); pack.addSyncTable('MyTable', ...); pack.setUserAuthentication({type: AuthenticationType.HeaderBearerToken}); Parameters \u00b6 Name Type definition? Partial < PackVersionDefinition > Returns \u00b6 PackDefinitionBuilder Defined in \u00b6 builder.ts:33","title":"newPack"},{"location":"reference/sdk/functions/simpleAutocomplete/","text":"\u25b8 simpleAutocomplete ( search , options ): Promise < MetadataFormulaObjectResultType []> Parameters \u00b6 Name Type search string | undefined options ( string | SimpleAutocompleteOption )[] Returns \u00b6 Promise < MetadataFormulaObjectResultType []> Defined in \u00b6 api.ts:716","title":"simpleAutocomplete"},{"location":"reference/sdk/functions/withQueryParams/","text":"\u25b8 withQueryParams ( url , params? ): string Parameters \u00b6 Name Type url string params? Object Returns \u00b6 string Defined in \u00b6 helpers/url.ts:5","title":"withQueryParams"},{"location":"reference/sdk/interfaces/ArraySchema/","text":"Type parameters \u00b6 Name Type T extends Schema Schema Hierarchy \u00b6 BaseSchema \u21b3 ArraySchema Properties \u00b6 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 BaseSchema.description Defined in \u00b6 schema.ts:75 items \u00b6 \u2022 items : T Defined in \u00b6 schema.ts:162 type \u00b6 \u2022 type : Array Defined in \u00b6 schema.ts:161","title":"ArraySchema"},{"location":"reference/sdk/interfaces/ArraySchema/#type-parameters","text":"Name Type T extends Schema Schema","title":"Type parameters"},{"location":"reference/sdk/interfaces/ArraySchema/#hierarchy","text":"BaseSchema \u21b3 ArraySchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/ArraySchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/ArraySchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/ArraySchema/#items","text":"\u2022 items : T","title":"items"},{"location":"reference/sdk/interfaces/ArraySchema/#type","text":"\u2022 type : Array","title":"type"},{"location":"reference/sdk/interfaces/ArrayType/","text":"Type parameters \u00b6 Name Type T extends Type Properties \u00b6 items \u00b6 \u2022 items : T Defined in \u00b6 api_types.ts:20 type \u00b6 \u2022 type : \"array\" Defined in \u00b6 api_types.ts:19","title":"ArrayType"},{"location":"reference/sdk/interfaces/ArrayType/#type-parameters","text":"Name Type T extends Type","title":"Type parameters"},{"location":"reference/sdk/interfaces/ArrayType/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/ArrayType/#items","text":"\u2022 items : T","title":"items"},{"location":"reference/sdk/interfaces/ArrayType/#type","text":"\u2022 type : \"array\"","title":"type"},{"location":"reference/sdk/interfaces/BooleanSchema/","text":"Hierarchy \u00b6 BaseSchema \u21b3 BooleanSchema Properties \u00b6 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 BaseSchema.description Defined in \u00b6 schema.ts:75 type \u00b6 \u2022 type : Boolean Defined in \u00b6 schema.ts:79","title":"BooleanSchema"},{"location":"reference/sdk/interfaces/BooleanSchema/#hierarchy","text":"BaseSchema \u21b3 BooleanSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/BooleanSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/BooleanSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/BooleanSchema/#type","text":"\u2022 type : Boolean","title":"type"},{"location":"reference/sdk/interfaces/Continuation/","text":"Container for arbitrary data about which page of data to retrieve in this sync invocation. Sync formulas fetch one reasonable size \"page\" of data per invocation such that the formula can be invoked quickly. The end result of a sync is the concatenation of the results from each individual invocation. To instruct the syncer to fetch a subsequent result page, return a Continuation that describes which page of results to fetch next. The continuation will be passed verbatim as an input to the subsequent invocation of the sync formula. The contents of this object are entirely up to the pack author. Examples: 1 {nextPage: 3} 1 {nextPageUrl: 'https://someapi.com/api/items?pageToken=asdf123'} Indexable \u00b6 \u25aa [key: string ]: string | number","title":"Continuation"},{"location":"reference/sdk/interfaces/Continuation/#indexable","text":"\u25aa [key: string ]: string | number","title":"Indexable"},{"location":"reference/sdk/interfaces/CurrencySchema/","text":"Hierarchy \u00b6 NumberSchema \u21b3 CurrencySchema Properties \u00b6 codaType \u00b6 \u2022 codaType : Currency Overrides \u00b6 NumberSchema . codaType Defined in \u00b6 schema.ts:100 currencyCode \u00b6 \u2022 Optional currencyCode : string Defined in \u00b6 schema.ts:102 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 NumberSchema . description Defined in \u00b6 schema.ts:75 format \u00b6 \u2022 Optional format : CurrencyFormat Defined in \u00b6 schema.ts:103 precision \u00b6 \u2022 Optional precision : number Defined in \u00b6 schema.ts:101 type \u00b6 \u2022 type : Number Inherited from \u00b6 NumberSchema . type Defined in \u00b6 schema.ts:83","title":"CurrencySchema"},{"location":"reference/sdk/interfaces/CurrencySchema/#hierarchy","text":"NumberSchema \u21b3 CurrencySchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/CurrencySchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/CurrencySchema/#codatype","text":"\u2022 codaType : Currency","title":"codaType"},{"location":"reference/sdk/interfaces/CurrencySchema/#currencycode","text":"\u2022 Optional currencyCode : string","title":"currencyCode"},{"location":"reference/sdk/interfaces/CurrencySchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/CurrencySchema/#format","text":"\u2022 Optional format : CurrencyFormat","title":"format"},{"location":"reference/sdk/interfaces/CurrencySchema/#precision","text":"\u2022 Optional precision : number","title":"precision"},{"location":"reference/sdk/interfaces/CurrencySchema/#type","text":"\u2022 type : Number","title":"type"},{"location":"reference/sdk/interfaces/DateSchema/","text":"Hierarchy \u00b6 BaseDateSchema \u21b3 DateSchema Properties \u00b6 codaType \u00b6 \u2022 codaType : Date Defined in \u00b6 schema.ts:124 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 BaseDateSchema.description Defined in \u00b6 schema.ts:75 format \u00b6 \u2022 Optional format : string Defined in \u00b6 schema.ts:126 type \u00b6 \u2022 type : Number | String Inherited from \u00b6 BaseDateSchema.type Defined in \u00b6 schema.ts:120","title":"DateSchema"},{"location":"reference/sdk/interfaces/DateSchema/#hierarchy","text":"BaseDateSchema \u21b3 DateSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/DateSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/DateSchema/#codatype","text":"\u2022 codaType : Date","title":"codaType"},{"location":"reference/sdk/interfaces/DateSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/DateSchema/#format","text":"\u2022 Optional format : string","title":"format"},{"location":"reference/sdk/interfaces/DateSchema/#type","text":"\u2022 type : Number | String","title":"type"},{"location":"reference/sdk/interfaces/DateTimeSchema/","text":"Hierarchy \u00b6 BaseDateSchema \u21b3 DateTimeSchema Properties \u00b6 codaType \u00b6 \u2022 codaType : DateTime Defined in \u00b6 schema.ts:136 dateFormat \u00b6 \u2022 Optional dateFormat : string Defined in \u00b6 schema.ts:138 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 BaseDateSchema.description Defined in \u00b6 schema.ts:75 timeFormat \u00b6 \u2022 Optional timeFormat : string Defined in \u00b6 schema.ts:140 type \u00b6 \u2022 type : Number | String Inherited from \u00b6 BaseDateSchema.type Defined in \u00b6 schema.ts:120","title":"DateTimeSchema"},{"location":"reference/sdk/interfaces/DateTimeSchema/#hierarchy","text":"BaseDateSchema \u21b3 DateTimeSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/DateTimeSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/DateTimeSchema/#codatype","text":"\u2022 codaType : DateTime","title":"codaType"},{"location":"reference/sdk/interfaces/DateTimeSchema/#dateformat","text":"\u2022 Optional dateFormat : string","title":"dateFormat"},{"location":"reference/sdk/interfaces/DateTimeSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/DateTimeSchema/#timeformat","text":"\u2022 Optional timeFormat : string","title":"timeFormat"},{"location":"reference/sdk/interfaces/DateTimeSchema/#type","text":"\u2022 type : Number | String","title":"type"},{"location":"reference/sdk/interfaces/DurationSchema/","text":"Hierarchy \u00b6 StringSchema < Duration > \u21b3 DurationSchema Properties \u00b6 codaType \u00b6 \u2022 Optional codaType : Duration Inherited from \u00b6 StringSchema . codaType Defined in \u00b6 schema.ts:157 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 StringSchema . description Defined in \u00b6 schema.ts:75 maxUnit \u00b6 \u2022 Optional maxUnit : DurationUnit Defined in \u00b6 schema.ts:152 precision \u00b6 \u2022 Optional precision : number Defined in \u00b6 schema.ts:151 type \u00b6 \u2022 type : String Inherited from \u00b6 StringSchema . type Defined in \u00b6 schema.ts:156","title":"DurationSchema"},{"location":"reference/sdk/interfaces/DurationSchema/#hierarchy","text":"StringSchema < Duration > \u21b3 DurationSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/DurationSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/DurationSchema/#codatype","text":"\u2022 Optional codaType : Duration","title":"codaType"},{"location":"reference/sdk/interfaces/DurationSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/DurationSchema/#maxunit","text":"\u2022 Optional maxUnit : DurationUnit","title":"maxUnit"},{"location":"reference/sdk/interfaces/DurationSchema/#precision","text":"\u2022 Optional precision : number","title":"precision"},{"location":"reference/sdk/interfaces/DurationSchema/#type","text":"\u2022 type : String","title":"type"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/","text":"Type definition for a Dynamic Sync Table. Should not be necessary to use directly, instead, define dynamic sync tables using makeDynamicSyncTable . Type parameters \u00b6 Name Type K extends string L extends string ParamDefsT extends ParamDefs SchemaT extends ObjectSchema < K , L > Hierarchy \u00b6 SyncTableDef < K , L , ParamDefsT , SchemaT > \u21b3 DynamicSyncTableDef Properties \u00b6 entityName \u00b6 \u2022 Optional entityName : string Inherited from \u00b6 SyncTableDef . entityName Defined in \u00b6 api.ts:118 getDisplayUrl \u00b6 \u2022 getDisplayUrl : MetadataFormula Defined in \u00b6 api.ts:134 getName \u00b6 \u2022 getName : MetadataFormula Defined in \u00b6 api.ts:133 getSchema \u00b6 \u2022 getSchema : MetadataFormula Overrides \u00b6 SyncTableDef . getSchema Defined in \u00b6 api.ts:132 getter \u00b6 \u2022 getter : SyncFormula < K , L , ParamDefsT , SchemaT > Inherited from \u00b6 SyncTableDef . getter Defined in \u00b6 api.ts:116 isDynamic \u00b6 \u2022 isDynamic : true Defined in \u00b6 api.ts:131 listDynamicUrls \u00b6 \u2022 Optional listDynamicUrls : MetadataFormula Defined in \u00b6 api.ts:135 name \u00b6 \u2022 name : string Inherited from \u00b6 SyncTableDef . name Defined in \u00b6 api.ts:114 schema \u00b6 \u2022 schema : SchemaT Inherited from \u00b6 SyncTableDef . schema Defined in \u00b6 api.ts:115","title":"DynamicSyncTableDef"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#type-parameters","text":"Name Type K extends string L extends string ParamDefsT extends ParamDefs SchemaT extends ObjectSchema < K , L >","title":"Type parameters"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#hierarchy","text":"SyncTableDef < K , L , ParamDefsT , SchemaT > \u21b3 DynamicSyncTableDef","title":"Hierarchy"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#entityname","text":"\u2022 Optional entityName : string","title":"entityName"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#getdisplayurl","text":"\u2022 getDisplayUrl : MetadataFormula","title":"getDisplayUrl"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#getname","text":"\u2022 getName : MetadataFormula","title":"getName"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#getschema","text":"\u2022 getSchema : MetadataFormula","title":"getSchema"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#getter","text":"\u2022 getter : SyncFormula < K , L , ParamDefsT , SchemaT >","title":"getter"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#isdynamic","text":"\u2022 isDynamic : true","title":"isDynamic"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#listdynamicurls","text":"\u2022 Optional listDynamicUrls : MetadataFormula","title":"listDynamicUrls"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#name","text":"\u2022 name : string","title":"name"},{"location":"reference/sdk/interfaces/DynamicSyncTableDef/#schema","text":"\u2022 schema : SchemaT","title":"schema"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/","text":"Type parameters \u00b6 Name Type ParamsT extends ParamDefs Hierarchy \u00b6 Omit < PackFormulaDef < ParamsT , string >, \"execute\" > \u21b3 EmptyFormulaDef Properties \u00b6 cacheTtlSecs \u00b6 \u2022 Optional Readonly cacheTtlSecs : number How long formulas running with the same values should cache their results for. Inherited from \u00b6 Omit.cacheTtlSecs Defined in \u00b6 api_types.ts:235 connectionRequirement \u00b6 \u2022 Optional Readonly connectionRequirement : ConnectionRequirement Does this formula require a connection (aka an account)? Inherited from \u00b6 Omit.connectionRequirement Defined in \u00b6 api_types.ts:227 description \u00b6 \u2022 Readonly description : string A brief description of what the formula does. Inherited from \u00b6 Omit.description Defined in \u00b6 api_types.ts:201 examples \u00b6 \u2022 Optional Readonly examples : { params : PackFormulaValue [] ; result : PackFormulaResult }[] Sample inputs and outputs demonstrating usage of this formula. Inherited from \u00b6 Omit.examples Defined in \u00b6 api_types.ts:216 extraOAuthScopes \u00b6 \u2022 Optional Readonly extraOAuthScopes : string [] OAuth scopes that the formula needs that weren't requested in the pack's overall authentication config. For example, a Slack pack can have one formula that needs admin privileges, but non-admins can use the bulk of the pack without those privileges. Coda will give users help in understanding that they need additional authentication to use a formula with extra OAuth scopes. Note that these scopes will always be requested in addition to the default scopes for the pack, so an end user must have both sets of permissions. Inherited from \u00b6 Omit.extraOAuthScopes Defined in \u00b6 api_types.ts:257 isAction \u00b6 \u2022 Optional Readonly isAction : boolean Does this formula take an action (vs retrieve data or make a calculation)? Actions are presented as buttons in the Coda UI. Inherited from \u00b6 Omit.isAction Defined in \u00b6 api_types.ts:222 isExperimental \u00b6 \u2022 Optional Readonly isExperimental : boolean If specified, the formula will not be suggested to users in Coda's formula autocomplete. The formula can still be invoked by manually typing its full name. Inherited from \u00b6 Omit.isExperimental Defined in \u00b6 api_types.ts:241 isSystem \u00b6 \u2022 Optional Readonly isSystem : boolean Whether this is a formula that will be used by Coda internally and not exposed directly to users. Not for use by packs that are not authored by Coda. Inherited from \u00b6 Omit.isSystem Defined in \u00b6 api_types.ts:247 name \u00b6 \u2022 Readonly name : string The name of the formula, used to invoke it. Inherited from \u00b6 Omit.name Defined in \u00b6 api_types.ts:196 network \u00b6 \u2022 Optional Readonly network : Network deprecated use isAction and connectionRequirement instead Inherited from \u00b6 Omit.network Defined in \u00b6 api_types.ts:230 parameters \u00b6 \u2022 Readonly parameters : ParamsT The parameter inputs to the formula, if any. Inherited from \u00b6 Omit.parameters Defined in \u00b6 api_types.ts:206 request \u00b6 \u2022 request : RequestHandlerTemplate Defined in \u00b6 api.ts:379 varargParameters \u00b6 \u2022 Optional Readonly varargParameters : ParamDefs Variable argument parameters, used if this formula should accept arbitrary numbers of inputs. Inherited from \u00b6 Omit.varargParameters Defined in \u00b6 api_types.ts:211","title":"EmptyFormulaDef"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#type-parameters","text":"Name Type ParamsT extends ParamDefs","title":"Type parameters"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#hierarchy","text":"Omit < PackFormulaDef < ParamsT , string >, \"execute\" > \u21b3 EmptyFormulaDef","title":"Hierarchy"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#cachettlsecs","text":"\u2022 Optional Readonly cacheTtlSecs : number How long formulas running with the same values should cache their results for.","title":"cacheTtlSecs"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#connectionrequirement","text":"\u2022 Optional Readonly connectionRequirement : ConnectionRequirement Does this formula require a connection (aka an account)?","title":"connectionRequirement"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#description","text":"\u2022 Readonly description : string A brief description of what the formula does.","title":"description"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#examples","text":"\u2022 Optional Readonly examples : { params : PackFormulaValue [] ; result : PackFormulaResult }[] Sample inputs and outputs demonstrating usage of this formula.","title":"examples"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#extraoauthscopes","text":"\u2022 Optional Readonly extraOAuthScopes : string [] OAuth scopes that the formula needs that weren't requested in the pack's overall authentication config. For example, a Slack pack can have one formula that needs admin privileges, but non-admins can use the bulk of the pack without those privileges. Coda will give users help in understanding that they need additional authentication to use a formula with extra OAuth scopes. Note that these scopes will always be requested in addition to the default scopes for the pack, so an end user must have both sets of permissions.","title":"extraOAuthScopes"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#isaction","text":"\u2022 Optional Readonly isAction : boolean Does this formula take an action (vs retrieve data or make a calculation)? Actions are presented as buttons in the Coda UI.","title":"isAction"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#isexperimental","text":"\u2022 Optional Readonly isExperimental : boolean If specified, the formula will not be suggested to users in Coda's formula autocomplete. The formula can still be invoked by manually typing its full name.","title":"isExperimental"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#issystem","text":"\u2022 Optional Readonly isSystem : boolean Whether this is a formula that will be used by Coda internally and not exposed directly to users. Not for use by packs that are not authored by Coda.","title":"isSystem"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#name","text":"\u2022 Readonly name : string The name of the formula, used to invoke it.","title":"name"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#network","text":"\u2022 Optional Readonly network : Network deprecated use isAction and connectionRequirement instead","title":"network"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#parameters","text":"\u2022 Readonly parameters : ParamsT The parameter inputs to the formula, if any.","title":"parameters"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#request","text":"\u2022 request : RequestHandlerTemplate","title":"request"},{"location":"reference/sdk/interfaces/EmptyFormulaDef/#varargparameters","text":"\u2022 Optional Readonly varargParameters : ParamDefs Variable argument parameters, used if this formula should accept arbitrary numbers of inputs.","title":"varargParameters"},{"location":"reference/sdk/interfaces/ExecutionContext/","text":"Hierarchy \u00b6 ExecutionContext \u21b3 SyncExecutionContext Properties \u00b6 endpoint \u00b6 \u2022 Optional Readonly endpoint : string Defined in \u00b6 api_types.ts:340 fetcher \u00b6 \u2022 Readonly fetcher : Fetcher Defined in \u00b6 api_types.ts:337 invocationLocation \u00b6 \u2022 Readonly invocationLocation : InvocationLocation Defined in \u00b6 api_types.ts:341 invocationToken \u00b6 \u2022 Readonly invocationToken : string Defined in \u00b6 api_types.ts:346 logger \u00b6 \u2022 Readonly logger : Logger Defined in \u00b6 api_types.ts:339 sync \u00b6 \u2022 Optional Readonly sync : Sync Defined in \u00b6 api_types.ts:347 temporaryBlobStorage \u00b6 \u2022 Readonly temporaryBlobStorage : TemporaryBlobStorage Defined in \u00b6 api_types.ts:338 timezone \u00b6 \u2022 Readonly timezone : string Defined in \u00b6 api_types.ts:342","title":"ExecutionContext"},{"location":"reference/sdk/interfaces/ExecutionContext/#hierarchy","text":"ExecutionContext \u21b3 SyncExecutionContext","title":"Hierarchy"},{"location":"reference/sdk/interfaces/ExecutionContext/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/ExecutionContext/#endpoint","text":"\u2022 Optional Readonly endpoint : string","title":"endpoint"},{"location":"reference/sdk/interfaces/ExecutionContext/#fetcher","text":"\u2022 Readonly fetcher : Fetcher","title":"fetcher"},{"location":"reference/sdk/interfaces/ExecutionContext/#invocationlocation","text":"\u2022 Readonly invocationLocation : InvocationLocation","title":"invocationLocation"},{"location":"reference/sdk/interfaces/ExecutionContext/#invocationtoken","text":"\u2022 Readonly invocationToken : string","title":"invocationToken"},{"location":"reference/sdk/interfaces/ExecutionContext/#logger","text":"\u2022 Readonly logger : Logger","title":"logger"},{"location":"reference/sdk/interfaces/ExecutionContext/#sync","text":"\u2022 Optional Readonly sync : Sync","title":"sync"},{"location":"reference/sdk/interfaces/ExecutionContext/#temporaryblobstorage","text":"\u2022 Readonly temporaryBlobStorage : TemporaryBlobStorage","title":"temporaryBlobStorage"},{"location":"reference/sdk/interfaces/ExecutionContext/#timezone","text":"\u2022 Readonly timezone : string","title":"timezone"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/","text":"Further stripped-down version of PackVersionMetadata that contains only what the browser needs. Hierarchy \u00b6 BasePackVersionMetadata \u21b3 ExternalPackVersionMetadata Properties \u00b6 authentication \u00b6 \u2022 authentication : Object Type declaration \u00b6 Name Type deferConnectionSetup? boolean endpointDomain? string params? { description : string ; name : string }[] postSetup? PostSetupMetadata [] requiresEndpointUrl boolean shouldAutoAuthSetup? boolean type AuthenticationType Defined in \u00b6 compiled_types.ts:96 formats \u00b6 \u2022 Optional formats : Format [] Defined in \u00b6 compiled_types.ts:109 formulaNamespace \u00b6 \u2022 Optional formulaNamespace : string deprecated Inherited from \u00b6 BasePackVersionMetadata.formulaNamespace Defined in \u00b6 types.ts:706 formulas \u00b6 \u2022 Optional formulas : ExternalPackFormulas Defined in \u00b6 compiled_types.ts:108 instructionsUrl \u00b6 \u2022 Optional instructionsUrl : string Defined in \u00b6 compiled_types.ts:105 networkDomains \u00b6 \u2022 Optional networkDomains : string [] Any domain(s) to which this pack makes fetcher requests. The domains this pack connects to must be declared up front here, both to clearly communicate to users what a pack is capable of connecting to, and for security reasons. These network domains are enforced at execution time: any fetcher request to a domain not listed here will be rejected. Only one network domain is allowed by default. If your pack has needs to connect to multiple domains contact Coda support for approval. Inherited from \u00b6 BasePackVersionMetadata.networkDomains Defined in \u00b6 types.ts:699 syncTables \u00b6 \u2022 Optional syncTables : PackSyncTable [] Defined in \u00b6 compiled_types.ts:110 version \u00b6 \u2022 version : string The semantic version of the pack. This must be valid semantic version of the form 1 , 1.2 , or 1.2.3 . When uploading a pack version, the semantic version must be greater than any previously uploaded version. Inherited from \u00b6 BasePackVersionMetadata.version Defined in \u00b6 types.ts:680","title":"ExternalPackVersionMetadata"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#hierarchy","text":"BasePackVersionMetadata \u21b3 ExternalPackVersionMetadata","title":"Hierarchy"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#authentication","text":"\u2022 authentication : Object","title":"authentication"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#formats","text":"\u2022 Optional formats : Format []","title":"formats"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#formulanamespace","text":"\u2022 Optional formulaNamespace : string deprecated","title":"formulaNamespace"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#formulas","text":"\u2022 Optional formulas : ExternalPackFormulas","title":"formulas"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#instructionsurl","text":"\u2022 Optional instructionsUrl : string","title":"instructionsUrl"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#networkdomains","text":"\u2022 Optional networkDomains : string [] Any domain(s) to which this pack makes fetcher requests. The domains this pack connects to must be declared up front here, both to clearly communicate to users what a pack is capable of connecting to, and for security reasons. These network domains are enforced at execution time: any fetcher request to a domain not listed here will be rejected. Only one network domain is allowed by default. If your pack has needs to connect to multiple domains contact Coda support for approval.","title":"networkDomains"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#synctables","text":"\u2022 Optional syncTables : PackSyncTable []","title":"syncTables"},{"location":"reference/sdk/interfaces/ExternalPackVersionMetadata/#version","text":"\u2022 version : string The semantic version of the pack. This must be valid semantic version of the form 1 , 1.2 , or 1.2.3 . When uploading a pack version, the semantic version must be greater than any previously uploaded version.","title":"version"},{"location":"reference/sdk/interfaces/FetchRequest/","text":"Properties \u00b6 body \u00b6 \u2022 Optional body : string Defined in \u00b6 api_types.ts:288 cacheTtlSecs \u00b6 \u2022 Optional cacheTtlSecs : number Defined in \u00b6 api_types.ts:292 disableAuthentication \u00b6 \u2022 Optional disableAuthentication : boolean Defined in \u00b6 api_types.ts:296 form \u00b6 \u2022 Optional form : Object Index signature \u00b6 \u25aa [key: string ]: string Defined in \u00b6 api_types.ts:289 headers \u00b6 \u2022 Optional headers : Object Index signature \u00b6 \u25aa [header: string ]: string Defined in \u00b6 api_types.ts:290 isBinaryResponse \u00b6 \u2022 Optional isBinaryResponse : boolean Defined in \u00b6 api_types.ts:294 method \u00b6 \u2022 method : \"GET\" | \"PATCH\" | \"POST\" | \"PUT\" | \"DELETE\" Defined in \u00b6 api_types.ts:286 url \u00b6 \u2022 url : string Defined in \u00b6 api_types.ts:287","title":"FetchRequest"},{"location":"reference/sdk/interfaces/FetchRequest/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/FetchRequest/#body","text":"\u2022 Optional body : string","title":"body"},{"location":"reference/sdk/interfaces/FetchRequest/#cachettlsecs","text":"\u2022 Optional cacheTtlSecs : number","title":"cacheTtlSecs"},{"location":"reference/sdk/interfaces/FetchRequest/#disableauthentication","text":"\u2022 Optional disableAuthentication : boolean","title":"disableAuthentication"},{"location":"reference/sdk/interfaces/FetchRequest/#form","text":"\u2022 Optional form : Object","title":"form"},{"location":"reference/sdk/interfaces/FetchRequest/#headers","text":"\u2022 Optional headers : Object","title":"headers"},{"location":"reference/sdk/interfaces/FetchRequest/#isbinaryresponse","text":"\u2022 Optional isBinaryResponse : boolean","title":"isBinaryResponse"},{"location":"reference/sdk/interfaces/FetchRequest/#method","text":"\u2022 method : \"GET\" | \"PATCH\" | \"POST\" | \"PUT\" | \"DELETE\"","title":"method"},{"location":"reference/sdk/interfaces/FetchRequest/#url","text":"\u2022 url : string","title":"url"},{"location":"reference/sdk/interfaces/FetchResponse/","text":"Type parameters \u00b6 Name Type T extends any``any Properties \u00b6 body \u00b6 \u2022 Optional body : T Defined in \u00b6 api_types.ts:302 headers \u00b6 \u2022 headers : Object Index signature \u00b6 \u25aa [header: string ]: string | string [] | undefined Defined in \u00b6 api_types.ts:303 status \u00b6 \u2022 status : number Defined in \u00b6 api_types.ts:301","title":"FetchResponse"},{"location":"reference/sdk/interfaces/FetchResponse/#type-parameters","text":"Name Type T extends any``any","title":"Type parameters"},{"location":"reference/sdk/interfaces/FetchResponse/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/FetchResponse/#body","text":"\u2022 Optional body : T","title":"body"},{"location":"reference/sdk/interfaces/FetchResponse/#headers","text":"\u2022 headers : Object","title":"headers"},{"location":"reference/sdk/interfaces/FetchResponse/#status","text":"\u2022 status : number","title":"status"},{"location":"reference/sdk/interfaces/Fetcher/","text":"Methods \u00b6 fetch \u00b6 \u25b8 fetch < T >( request ): Promise < FetchResponse < T >> Type parameters \u00b6 Name Type T any Parameters \u00b6 Name Type request FetchRequest Returns \u00b6 Promise < FetchResponse < T >> Defined in \u00b6 api_types.ts:307","title":"Fetcher"},{"location":"reference/sdk/interfaces/Fetcher/#methods","text":"","title":"Methods"},{"location":"reference/sdk/interfaces/Fetcher/#fetch","text":"\u25b8 fetch < T >( request ): Promise < FetchResponse < T >>","title":"fetch"},{"location":"reference/sdk/interfaces/Format/","text":"Definition for a custom column type that users can apply to any column in any Coda table. A column format tells Coda to interpret the value in a cell by executing a formula using that value, typically looking up data related to that value from a third-party API. For example, the Weather pack has a column format \"Current Weather\"; when applied to a column, if you type a city or address into a cell in that column, that location will be used as the input to a formula that fetches the current weather at that location, and the resulting object with weather info will be shown in the cell. A column format is just a wrapper around a formula defined in the formulas section of your pack definition. It tells Coda to execute that particular formula using the value of the cell as input. The formula referenced by a format must have exactly one required parameter. You may optionally specify one or more matchers , which are regular expressions that can be matched against values that users paste into table cells, to determine if this Format is applicable to that value. Matchers help users realize that there is a pack format that may augment their experience of working with such values. For example, if you're building a Wikipedia pack, you may write a matcher regular expression that looks for Wikipedia article URLs, if you have a formula that can fetched structured data given an article URL. This would help users discover that there is a pack that can fetch structured data given only a url. At present, matchers will only be run on URLs and not other text values. Properties \u00b6 formulaName \u00b6 \u2022 formulaName : string The name of the formula to invoke for values in columns using this format. This must correspond to the name of a regular, public formula defined in this pack. Defined in \u00b6 types.ts:580 formulaNamespace \u00b6 \u2022 formulaNamespace : string deprecated Namespaces are being removed from the product. Defined in \u00b6 types.ts:575 hasNoConnection \u00b6 \u2022 Optional hasNoConnection : boolean deprecated No longer needed, will be inferred from the referenced formula. Defined in \u00b6 types.ts:582 instructions \u00b6 \u2022 Optional instructions : string A brief, optional explanation of how users should use this format, for example, what kinds of values they should put in columns using this format. Defined in \u00b6 types.ts:587 matchers \u00b6 \u2022 Optional matchers : string [] A list of regular expressions that match URLs that the formula implementing this format is capable of handling. As described in Format , this is a discovery mechanism. Defined in \u00b6 types.ts:592 name \u00b6 \u2022 name : string The name of this column format. This will show to users in the column type chooser. Defined in \u00b6 types.ts:573 placeholder \u00b6 \u2022 Optional placeholder : string deprecated Currently unused. Defined in \u00b6 types.ts:596","title":"Format"},{"location":"reference/sdk/interfaces/Format/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/Format/#formulaname","text":"\u2022 formulaName : string The name of the formula to invoke for values in columns using this format. This must correspond to the name of a regular, public formula defined in this pack.","title":"formulaName"},{"location":"reference/sdk/interfaces/Format/#formulanamespace","text":"\u2022 formulaNamespace : string deprecated Namespaces are being removed from the product.","title":"formulaNamespace"},{"location":"reference/sdk/interfaces/Format/#hasnoconnection","text":"\u2022 Optional hasNoConnection : boolean deprecated No longer needed, will be inferred from the referenced formula.","title":"hasNoConnection"},{"location":"reference/sdk/interfaces/Format/#instructions","text":"\u2022 Optional instructions : string A brief, optional explanation of how users should use this format, for example, what kinds of values they should put in columns using this format.","title":"instructions"},{"location":"reference/sdk/interfaces/Format/#matchers","text":"\u2022 Optional matchers : string [] A list of regular expressions that match URLs that the formula implementing this format is capable of handling. As described in Format , this is a discovery mechanism.","title":"matchers"},{"location":"reference/sdk/interfaces/Format/#name","text":"\u2022 name : string The name of this column format. This will show to users in the column type chooser.","title":"name"},{"location":"reference/sdk/interfaces/Format/#placeholder","text":"\u2022 Optional placeholder : string deprecated Currently unused.","title":"placeholder"},{"location":"reference/sdk/interfaces/Identity/","text":"Hierarchy \u00b6 IdentityDefinition \u21b3 Identity Properties \u00b6 attribution \u00b6 \u2022 Optional attribution : AttributionNode [] Inherited from \u00b6 IdentityDefinition . attribution Defined in \u00b6 schema.ts:179 dynamicUrl \u00b6 \u2022 Optional dynamicUrl : string Inherited from \u00b6 IdentityDefinition . dynamicUrl Defined in \u00b6 schema.ts:178 name \u00b6 \u2022 name : string Inherited from \u00b6 IdentityDefinition . name Defined in \u00b6 schema.ts:177 packId \u00b6 \u2022 packId : number Overrides \u00b6 IdentityDefinition . packId Defined in \u00b6 schema.ts:185","title":"Identity"},{"location":"reference/sdk/interfaces/Identity/#hierarchy","text":"IdentityDefinition \u21b3 Identity","title":"Hierarchy"},{"location":"reference/sdk/interfaces/Identity/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/Identity/#attribution","text":"\u2022 Optional attribution : AttributionNode []","title":"attribution"},{"location":"reference/sdk/interfaces/Identity/#dynamicurl","text":"\u2022 Optional dynamicUrl : string","title":"dynamicUrl"},{"location":"reference/sdk/interfaces/Identity/#name","text":"\u2022 name : string","title":"name"},{"location":"reference/sdk/interfaces/Identity/#packid","text":"\u2022 packId : number","title":"packId"},{"location":"reference/sdk/interfaces/IdentityDefinition/","text":"Hierarchy \u00b6 IdentityDefinition \u21b3 Identity Properties \u00b6 attribution \u00b6 \u2022 Optional attribution : AttributionNode [] Defined in \u00b6 schema.ts:179 dynamicUrl \u00b6 \u2022 Optional dynamicUrl : string Defined in \u00b6 schema.ts:178 name \u00b6 \u2022 name : string Defined in \u00b6 schema.ts:177 packId \u00b6 \u2022 Optional packId : number Defined in \u00b6 schema.ts:181","title":"IdentityDefinition"},{"location":"reference/sdk/interfaces/IdentityDefinition/#hierarchy","text":"IdentityDefinition \u21b3 Identity","title":"Hierarchy"},{"location":"reference/sdk/interfaces/IdentityDefinition/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/IdentityDefinition/#attribution","text":"\u2022 Optional attribution : AttributionNode []","title":"attribution"},{"location":"reference/sdk/interfaces/IdentityDefinition/#dynamicurl","text":"\u2022 Optional dynamicUrl : string","title":"dynamicUrl"},{"location":"reference/sdk/interfaces/IdentityDefinition/#name","text":"\u2022 name : string","title":"name"},{"location":"reference/sdk/interfaces/IdentityDefinition/#packid","text":"\u2022 Optional packId : number","title":"packId"},{"location":"reference/sdk/interfaces/Logger/","text":"Methods \u00b6 debug \u00b6 \u25b8 debug ( message , ... args ): void Parameters \u00b6 Name Type message string ...args LoggerParamType [] Returns \u00b6 void Defined in \u00b6 api_types.ts:325 error \u00b6 \u25b8 error ( message , ... args ): void Parameters \u00b6 Name Type message string ...args LoggerParamType [] Returns \u00b6 void Defined in \u00b6 api_types.ts:328 info \u00b6 \u25b8 info ( message , ... args ): void Parameters \u00b6 Name Type message string ...args LoggerParamType [] Returns \u00b6 void Defined in \u00b6 api_types.ts:326 trace \u00b6 \u25b8 trace ( message , ... args ): void Parameters \u00b6 Name Type message string ...args LoggerParamType [] Returns \u00b6 void Defined in \u00b6 api_types.ts:324 warn \u00b6 \u25b8 warn ( message , ... args ): void Parameters \u00b6 Name Type message string ...args LoggerParamType [] Returns \u00b6 void Defined in \u00b6 api_types.ts:327","title":"Logger"},{"location":"reference/sdk/interfaces/Logger/#methods","text":"","title":"Methods"},{"location":"reference/sdk/interfaces/Logger/#debug","text":"\u25b8 debug ( message , ... args ): void","title":"debug"},{"location":"reference/sdk/interfaces/Logger/#error","text":"\u25b8 error ( message , ... args ): void","title":"error"},{"location":"reference/sdk/interfaces/Logger/#info","text":"\u25b8 info ( message , ... args ): void","title":"info"},{"location":"reference/sdk/interfaces/Logger/#trace","text":"\u25b8 trace ( message , ... args ): void","title":"trace"},{"location":"reference/sdk/interfaces/Logger/#warn","text":"\u25b8 warn ( message , ... args ): void","title":"warn"},{"location":"reference/sdk/interfaces/MetadataFormulaObjectResultType/","text":"The return type for a metadata formula that should return a different display to the user than is used internally. Properties \u00b6 display \u00b6 \u2022 display : string Defined in \u00b6 api.ts:661 hasChildren \u00b6 \u2022 Optional hasChildren : boolean Defined in \u00b6 api.ts:663 value \u00b6 \u2022 value : string | number Defined in \u00b6 api.ts:662","title":"MetadataFormulaObjectResultType"},{"location":"reference/sdk/interfaces/MetadataFormulaObjectResultType/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/MetadataFormulaObjectResultType/#display","text":"\u2022 display : string","title":"display"},{"location":"reference/sdk/interfaces/MetadataFormulaObjectResultType/#haschildren","text":"\u2022 Optional hasChildren : boolean","title":"hasChildren"},{"location":"reference/sdk/interfaces/MetadataFormulaObjectResultType/#value","text":"\u2022 value : string | number","title":"value"},{"location":"reference/sdk/interfaces/Network/","text":"deprecated use isAction and connectionRequirement on the formula definition instead. Properties \u00b6 connection \u00b6 \u2022 Optional Readonly connection : NetworkConnection Defined in \u00b6 api_types.ts:277 hasSideEffect \u00b6 \u2022 Optional Readonly hasSideEffect : boolean Defined in \u00b6 api_types.ts:275 requiresConnection \u00b6 \u2022 Optional Readonly requiresConnection : boolean Defined in \u00b6 api_types.ts:276","title":"Network"},{"location":"reference/sdk/interfaces/Network/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/Network/#connection","text":"\u2022 Optional Readonly connection : NetworkConnection","title":"connection"},{"location":"reference/sdk/interfaces/Network/#hassideeffect","text":"\u2022 Optional Readonly hasSideEffect : boolean","title":"hasSideEffect"},{"location":"reference/sdk/interfaces/Network/#requiresconnection","text":"\u2022 Optional Readonly requiresConnection : boolean","title":"requiresConnection"},{"location":"reference/sdk/interfaces/NumberSchema/","text":"Hierarchy \u00b6 BaseSchema \u21b3 NumberSchema \u21b3\u21b3 CurrencySchema \u21b3\u21b3 NumericSchema \u21b3\u21b3 ScaleSchema \u21b3\u21b3 SliderSchema Properties \u00b6 codaType \u00b6 \u2022 Optional codaType : Date | Time | DateTime | Percent | Currency | Slider | Scale Defined in \u00b6 schema.ts:84 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 BaseSchema.description Defined in \u00b6 schema.ts:75 type \u00b6 \u2022 type : Number Defined in \u00b6 schema.ts:83","title":"NumberSchema"},{"location":"reference/sdk/interfaces/NumberSchema/#hierarchy","text":"BaseSchema \u21b3 NumberSchema \u21b3\u21b3 CurrencySchema \u21b3\u21b3 NumericSchema \u21b3\u21b3 ScaleSchema \u21b3\u21b3 SliderSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/NumberSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/NumberSchema/#codatype","text":"\u2022 Optional codaType : Date | Time | DateTime | Percent | Currency | Slider | Scale","title":"codaType"},{"location":"reference/sdk/interfaces/NumberSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/NumberSchema/#type","text":"\u2022 type : Number","title":"type"},{"location":"reference/sdk/interfaces/NumericSchema/","text":"Hierarchy \u00b6 NumberSchema \u21b3 NumericSchema Properties \u00b6 codaType \u00b6 \u2022 Optional codaType : Percent Overrides \u00b6 NumberSchema . codaType Defined in \u00b6 schema.ts:88 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 NumberSchema . description Defined in \u00b6 schema.ts:75 precision \u00b6 \u2022 Optional precision : number Defined in \u00b6 schema.ts:89 type \u00b6 \u2022 type : Number Inherited from \u00b6 NumberSchema . type Defined in \u00b6 schema.ts:83 useThousandsSeparator \u00b6 \u2022 Optional useThousandsSeparator : boolean Defined in \u00b6 schema.ts:90","title":"NumericSchema"},{"location":"reference/sdk/interfaces/NumericSchema/#hierarchy","text":"NumberSchema \u21b3 NumericSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/NumericSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/NumericSchema/#codatype","text":"\u2022 Optional codaType : Percent","title":"codaType"},{"location":"reference/sdk/interfaces/NumericSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/NumericSchema/#precision","text":"\u2022 Optional precision : number","title":"precision"},{"location":"reference/sdk/interfaces/NumericSchema/#type","text":"\u2022 type : Number","title":"type"},{"location":"reference/sdk/interfaces/NumericSchema/#usethousandsseparator","text":"\u2022 Optional useThousandsSeparator : boolean","title":"useThousandsSeparator"},{"location":"reference/sdk/interfaces/OAuth2Authentication/","text":"Authenticate using OAuth2. You must specify the authorization URL, token exchange URL, and scopes here as part of the pack definition. You'll provide the application's client ID and client secret in the pack management UI, so that these can be stored securely. The API must use a (largely) standards-compliant implementation of OAuth2. Hierarchy \u00b6 BaseAuthentication \u21b3 OAuth2Authentication Properties \u00b6 additionalParams \u00b6 \u2022 Optional additionalParams : Object Option custom URL parameters and values that should be included when redirecting the user to the authorizationUrl . Index signature \u00b6 \u25aa [key: string ]: any Defined in \u00b6 types.ts:367 authorizationUrl \u00b6 \u2022 authorizationUrl : string The URL to which the user will be redirected in order to authorize this pack. This is typically just a base url with no parameters. Coda will append the scope parameter automatically. If the authorization flow requires additional parameters, they may be specified using additionalParams . Defined in \u00b6 types.ts:342 defaultConnectionType \u00b6 \u2022 Optional defaultConnectionType : DefaultConnectionType Indicates the defualt manner in which a user's account is expected to be used by this pack, e.g. is this account used for retrieving data, taking actions, or both. See https://help.coda.io/en/articles/4587167-what-can-coda-access-with-packs#h_40472431f0 Inherited from \u00b6 BaseAuthentication.defaultConnectionType Defined in \u00b6 types.ts:207 endpointDomain \u00b6 \u2022 Optional endpointDomain : string When requiresEndpointUrl is set to true this should be the root domain that all endpoints share. For example, this value would be \"example.com\" if specific endpoints looked like {custom-subdomain}.example.com. For packs that make requests to multiple domains (uncommon), this should be the domain within networkDomains that this configuration applies to. Inherited from \u00b6 BaseAuthentication.endpointDomain Defined in \u00b6 types.ts:229 endpointKey \u00b6 \u2022 Optional endpointKey : string In rare cases, OAuth providers will return the specific API endpoint domain for the user as part of the OAuth token exchange response. If so, this is the property in the OAuth token exchange response JSON body that points to the endpoint. The endpoint will be saved along with the account and will be available during execution as ExecutionContext.endpoint . Defined in \u00b6 types.ts:377 getConnectionName \u00b6 \u2022 Optional getConnectionName : MetadataFormula Inherited from \u00b6 BaseAuthentication.getConnectionName Defined in \u00b6 types.ts:199 getConnectionUserId \u00b6 \u2022 Optional getConnectionUserId : MetadataFormula Inherited from \u00b6 BaseAuthentication.getConnectionUserId Defined in \u00b6 types.ts:200 instructionsUrl \u00b6 \u2022 Optional instructionsUrl : string A link to a help article or other page with more instructions about how to set up an account for this pack. Inherited from \u00b6 BaseAuthentication.instructionsUrl Defined in \u00b6 types.ts:212 postSetup \u00b6 \u2022 Optional postSetup : SetEndpoint [] One or more setup steps to run after the user has set up the account, before completing installation of the pack. This is not common. Inherited from \u00b6 BaseAuthentication.postSetup Defined in \u00b6 types.ts:235 requiresEndpointUrl \u00b6 \u2022 Optional requiresEndpointUrl : boolean If true, indicates this has pack has a specific endpoint domain for each account, that is used as the basis of HTTP requests. For example, API requests are made to .example.com rather than example.com. If true, the user will be prompted to provide their specific endpoint domain when creating a new account. Inherited from \u00b6 BaseAuthentication.requiresEndpointUrl Defined in \u00b6 types.ts:220 scopes \u00b6 \u2022 Optional scopes : string [] Scopes that are required to use this pack. Each API defines its own list of scopes, or none at all. You should consult the documentation for the API you are connecting to. Defined in \u00b6 types.ts:354 tokenPrefix \u00b6 \u2022 Optional tokenPrefix : string A custom prefix to be used when passing the access token in the HTTP Authorization header when making requests. Typically this prefix is Bearer which is what will be used if this value is omitted. However, some services require a different prefix. When sending authenticated requests, a HTTP header of the form Authorization: <tokenPrefix> <token> will be used. Defined in \u00b6 types.ts:362 tokenQueryParam \u00b6 \u2022 Optional tokenQueryParam : string In rare cases, OAuth providers ask that a token is passed as a URL parameter rather than an HTTP header. If so, this is the name of the URL query parameter that should contain the token. Defined in \u00b6 types.ts:384 tokenUrl \u00b6 \u2022 tokenUrl : string The URL that Coda will hit in order to exchange the temporary code for an access token at the end of the OAuth handshake flow. Defined in \u00b6 types.ts:347 type \u00b6 \u2022 type : OAuth2 Defined in \u00b6 types.ts:335","title":"OAuth2Authentication"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#hierarchy","text":"BaseAuthentication \u21b3 OAuth2Authentication","title":"Hierarchy"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#additionalparams","text":"\u2022 Optional additionalParams : Object Option custom URL parameters and values that should be included when redirecting the user to the authorizationUrl .","title":"additionalParams"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#authorizationurl","text":"\u2022 authorizationUrl : string The URL to which the user will be redirected in order to authorize this pack. This is typically just a base url with no parameters. Coda will append the scope parameter automatically. If the authorization flow requires additional parameters, they may be specified using additionalParams .","title":"authorizationUrl"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#defaultconnectiontype","text":"\u2022 Optional defaultConnectionType : DefaultConnectionType Indicates the defualt manner in which a user's account is expected to be used by this pack, e.g. is this account used for retrieving data, taking actions, or both. See https://help.coda.io/en/articles/4587167-what-can-coda-access-with-packs#h_40472431f0","title":"defaultConnectionType"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#endpointdomain","text":"\u2022 Optional endpointDomain : string When requiresEndpointUrl is set to true this should be the root domain that all endpoints share. For example, this value would be \"example.com\" if specific endpoints looked like {custom-subdomain}.example.com. For packs that make requests to multiple domains (uncommon), this should be the domain within networkDomains that this configuration applies to.","title":"endpointDomain"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#endpointkey","text":"\u2022 Optional endpointKey : string In rare cases, OAuth providers will return the specific API endpoint domain for the user as part of the OAuth token exchange response. If so, this is the property in the OAuth token exchange response JSON body that points to the endpoint. The endpoint will be saved along with the account and will be available during execution as ExecutionContext.endpoint .","title":"endpointKey"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#getconnectionname","text":"\u2022 Optional getConnectionName : MetadataFormula","title":"getConnectionName"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#getconnectionuserid","text":"\u2022 Optional getConnectionUserId : MetadataFormula","title":"getConnectionUserId"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#instructionsurl","text":"\u2022 Optional instructionsUrl : string A link to a help article or other page with more instructions about how to set up an account for this pack.","title":"instructionsUrl"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#postsetup","text":"\u2022 Optional postSetup : SetEndpoint [] One or more setup steps to run after the user has set up the account, before completing installation of the pack. This is not common.","title":"postSetup"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#requiresendpointurl","text":"\u2022 Optional requiresEndpointUrl : boolean If true, indicates this has pack has a specific endpoint domain for each account, that is used as the basis of HTTP requests. For example, API requests are made to .example.com rather than example.com. If true, the user will be prompted to provide their specific endpoint domain when creating a new account.","title":"requiresEndpointUrl"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#scopes","text":"\u2022 Optional scopes : string [] Scopes that are required to use this pack. Each API defines its own list of scopes, or none at all. You should consult the documentation for the API you are connecting to.","title":"scopes"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#tokenprefix","text":"\u2022 Optional tokenPrefix : string A custom prefix to be used when passing the access token in the HTTP Authorization header when making requests. Typically this prefix is Bearer which is what will be used if this value is omitted. However, some services require a different prefix. When sending authenticated requests, a HTTP header of the form Authorization: <tokenPrefix> <token> will be used.","title":"tokenPrefix"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#tokenqueryparam","text":"\u2022 Optional tokenQueryParam : string In rare cases, OAuth providers ask that a token is passed as a URL parameter rather than an HTTP header. If so, this is the name of the URL query parameter that should contain the token.","title":"tokenQueryParam"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#tokenurl","text":"\u2022 tokenUrl : string The URL that Coda will hit in order to exchange the temporary code for an access token at the end of the OAuth handshake flow.","title":"tokenUrl"},{"location":"reference/sdk/interfaces/OAuth2Authentication/#type","text":"\u2022 type : OAuth2","title":"type"},{"location":"reference/sdk/interfaces/ObjectSchema/","text":"Type parameters \u00b6 Name Type K extends string L extends string Hierarchy \u00b6 ObjectSchemaDefinition < K , L > \u21b3 ObjectSchema Properties \u00b6 codaType \u00b6 \u2022 Optional codaType : Person | Reference Inherited from \u00b6 ObjectSchemaDefinition.codaType Defined in \u00b6 schema.ts:193 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 ObjectSchemaDefinition.description Defined in \u00b6 schema.ts:75 featured \u00b6 \u2022 Optional featured : L [] Inherited from \u00b6 ObjectSchemaDefinition.featured Defined in \u00b6 schema.ts:194 id \u00b6 \u2022 Optional id : K Inherited from \u00b6 ObjectSchemaDefinition.id Defined in \u00b6 schema.ts:191 identity \u00b6 \u2022 Optional identity : Identity Overrides \u00b6 ObjectSchemaDefinition.identity Defined in \u00b6 schema.ts:199 primary \u00b6 \u2022 Optional primary : K Inherited from \u00b6 ObjectSchemaDefinition.primary Defined in \u00b6 schema.ts:192 properties \u00b6 \u2022 properties : ObjectSchemaProperties < K | L > Inherited from \u00b6 ObjectSchemaDefinition.properties Defined in \u00b6 schema.ts:190 type \u00b6 \u2022 type : Object Inherited from \u00b6 ObjectSchemaDefinition.type Defined in \u00b6 schema.ts:189","title":"ObjectSchema"},{"location":"reference/sdk/interfaces/ObjectSchema/#type-parameters","text":"Name Type K extends string L extends string","title":"Type parameters"},{"location":"reference/sdk/interfaces/ObjectSchema/#hierarchy","text":"ObjectSchemaDefinition < K , L > \u21b3 ObjectSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/ObjectSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/ObjectSchema/#codatype","text":"\u2022 Optional codaType : Person | Reference","title":"codaType"},{"location":"reference/sdk/interfaces/ObjectSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/ObjectSchema/#featured","text":"\u2022 Optional featured : L []","title":"featured"},{"location":"reference/sdk/interfaces/ObjectSchema/#id","text":"\u2022 Optional id : K","title":"id"},{"location":"reference/sdk/interfaces/ObjectSchema/#identity","text":"\u2022 Optional identity : Identity","title":"identity"},{"location":"reference/sdk/interfaces/ObjectSchema/#primary","text":"\u2022 Optional primary : K","title":"primary"},{"location":"reference/sdk/interfaces/ObjectSchema/#properties_1","text":"\u2022 properties : ObjectSchemaProperties < K | L >","title":"properties"},{"location":"reference/sdk/interfaces/ObjectSchema/#type","text":"\u2022 type : Object","title":"type"},{"location":"reference/sdk/interfaces/ObjectSchemaProperty/","text":"Properties \u00b6 fromKey \u00b6 \u2022 Optional fromKey : string Defined in \u00b6 schema.ts:166 required \u00b6 \u2022 Optional required : boolean Defined in \u00b6 schema.ts:167","title":"ObjectSchemaProperty"},{"location":"reference/sdk/interfaces/ObjectSchemaProperty/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/ObjectSchemaProperty/#fromkey","text":"\u2022 Optional fromKey : string","title":"fromKey"},{"location":"reference/sdk/interfaces/ObjectSchemaProperty/#required","text":"\u2022 Optional required : boolean","title":"required"},{"location":"reference/sdk/interfaces/PackDefinition/","text":"deprecated use #PackVersionDefinition The legacy complete definition of a Pack including un-versioned metadata. This should only be used by legacy Coda pack implementations. Hierarchy \u00b6 PackVersionDefinition \u21b3 PackDefinition Properties \u00b6 category \u00b6 \u2022 Optional category : PackCategory Defined in \u00b6 types.ts:739 defaultAuthentication \u00b6 \u2022 Optional defaultAuthentication : Authentication If specified, the user must provide personal authentication credentials before using the pack. Inherited from \u00b6 PackVersionDefinition . defaultAuthentication Defined in \u00b6 types.ts:684 description \u00b6 \u2022 description : string Defined in \u00b6 types.ts:737 enabledConfigName \u00b6 \u2022 Optional enabledConfigName : string Defined in \u00b6 types.ts:741 exampleImages \u00b6 \u2022 Optional exampleImages : string [] Defined in \u00b6 types.ts:742 exampleVideoIds \u00b6 \u2022 Optional exampleVideoIds : string [] Defined in \u00b6 types.ts:743 formats \u00b6 \u2022 Optional formats : Format [] Definitions of this pack's column formats. See Format . Inherited from \u00b6 PackVersionDefinition . formats Defined in \u00b6 types.ts:720 formulaNamespace \u00b6 \u2022 Optional formulaNamespace : string deprecated Inherited from \u00b6 PackVersionDefinition . formulaNamespace Defined in \u00b6 types.ts:706 formulas \u00b6 \u2022 Optional formulas : PackFormulas | Formula < ParamDefs >[] Definitions of this pack's formulas. See Formula . Note that button actions are also defind here. Buttons are simply formulas with isAction: true . Note also, this should always be an array of Formulas. The PackFormulas object structure is deprecated and will be removed shortly. Inherited from \u00b6 PackVersionDefinition . formulas Defined in \u00b6 types.ts:716 id \u00b6 \u2022 id : number Defined in \u00b6 types.ts:734 isSystem \u00b6 \u2022 Optional isSystem : boolean Whether this is a pack that will be used by Coda internally and not exposed directly to users. Defined in \u00b6 types.ts:750 logoPath \u00b6 \u2022 logoPath : string Defined in \u00b6 types.ts:740 minimumFeatureSet \u00b6 \u2022 Optional minimumFeatureSet : FeatureSet Defined in \u00b6 types.ts:744 name \u00b6 \u2022 name : string Defined in \u00b6 types.ts:735 networkDomains \u00b6 \u2022 Optional networkDomains : string [] Any domain(s) to which this pack makes fetcher requests. The domains this pack connects to must be declared up front here, both to clearly communicate to users what a pack is capable of connecting to, and for security reasons. These network domains are enforced at execution time: any fetcher request to a domain not listed here will be rejected. Only one network domain is allowed by default. If your pack has needs to connect to multiple domains contact Coda support for approval. Inherited from \u00b6 PackVersionDefinition . networkDomains Defined in \u00b6 types.ts:699 permissionsDescription \u00b6 \u2022 Optional permissionsDescription : string Defined in \u00b6 types.ts:738 quotas \u00b6 \u2022 Optional quotas : Partial < Object > Defined in \u00b6 types.ts:745 rateLimits \u00b6 \u2022 Optional rateLimits : RateLimits Defined in \u00b6 types.ts:746 shortDescription \u00b6 \u2022 shortDescription : string Defined in \u00b6 types.ts:736 syncTables \u00b6 \u2022 Optional syncTables : SyncTable [] Definitions of this pack's sync tables. See {@link SyncTable}. Inherited from \u00b6 PackVersionDefinition . syncTables Defined in \u00b6 types.ts:724 systemConnectionAuthentication \u00b6 \u2022 Optional systemConnectionAuthentication : SystemAuthentication If specified, this pack requires system credentials to be set up via Coda's admin console in order to work when no explicit connection is specified by the user. Inherited from \u00b6 PackVersionDefinition . systemConnectionAuthentication Defined in \u00b6 types.ts:689 version \u00b6 \u2022 version : string The semantic version of the pack. This must be valid semantic version of the form 1 , 1.2 , or 1.2.3 . When uploading a pack version, the semantic version must be greater than any previously uploaded version. Inherited from \u00b6 PackVersionDefinition . version Defined in \u00b6 types.ts:680","title":"PackDefinition"},{"location":"reference/sdk/interfaces/PackDefinition/#hierarchy","text":"PackVersionDefinition \u21b3 PackDefinition","title":"Hierarchy"},{"location":"reference/sdk/interfaces/PackDefinition/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/PackDefinition/#category","text":"\u2022 Optional category : PackCategory","title":"category"},{"location":"reference/sdk/interfaces/PackDefinition/#defaultauthentication","text":"\u2022 Optional defaultAuthentication : Authentication If specified, the user must provide personal authentication credentials before using the pack.","title":"defaultAuthentication"},{"location":"reference/sdk/interfaces/PackDefinition/#description","text":"\u2022 description : string","title":"description"},{"location":"reference/sdk/interfaces/PackDefinition/#enabledconfigname","text":"\u2022 Optional enabledConfigName : string","title":"enabledConfigName"},{"location":"reference/sdk/interfaces/PackDefinition/#exampleimages","text":"\u2022 Optional exampleImages : string []","title":"exampleImages"},{"location":"reference/sdk/interfaces/PackDefinition/#examplevideoids","text":"\u2022 Optional exampleVideoIds : string []","title":"exampleVideoIds"},{"location":"reference/sdk/interfaces/PackDefinition/#formats","text":"\u2022 Optional formats : Format [] Definitions of this pack's column formats. See Format .","title":"formats"},{"location":"reference/sdk/interfaces/PackDefinition/#formulanamespace","text":"\u2022 Optional formulaNamespace : string deprecated","title":"formulaNamespace"},{"location":"reference/sdk/interfaces/PackDefinition/#formulas","text":"\u2022 Optional formulas : PackFormulas | Formula < ParamDefs >[] Definitions of this pack's formulas. See Formula . Note that button actions are also defind here. Buttons are simply formulas with isAction: true . Note also, this should always be an array of Formulas. The PackFormulas object structure is deprecated and will be removed shortly.","title":"formulas"},{"location":"reference/sdk/interfaces/PackDefinition/#id","text":"\u2022 id : number","title":"id"},{"location":"reference/sdk/interfaces/PackDefinition/#issystem","text":"\u2022 Optional isSystem : boolean Whether this is a pack that will be used by Coda internally and not exposed directly to users.","title":"isSystem"},{"location":"reference/sdk/interfaces/PackDefinition/#logopath","text":"\u2022 logoPath : string","title":"logoPath"},{"location":"reference/sdk/interfaces/PackDefinition/#minimumfeatureset","text":"\u2022 Optional minimumFeatureSet : FeatureSet","title":"minimumFeatureSet"},{"location":"reference/sdk/interfaces/PackDefinition/#name","text":"\u2022 name : string","title":"name"},{"location":"reference/sdk/interfaces/PackDefinition/#networkdomains","text":"\u2022 Optional networkDomains : string [] Any domain(s) to which this pack makes fetcher requests. The domains this pack connects to must be declared up front here, both to clearly communicate to users what a pack is capable of connecting to, and for security reasons. These network domains are enforced at execution time: any fetcher request to a domain not listed here will be rejected. Only one network domain is allowed by default. If your pack has needs to connect to multiple domains contact Coda support for approval.","title":"networkDomains"},{"location":"reference/sdk/interfaces/PackDefinition/#permissionsdescription","text":"\u2022 Optional permissionsDescription : string","title":"permissionsDescription"},{"location":"reference/sdk/interfaces/PackDefinition/#quotas","text":"\u2022 Optional quotas : Partial < Object >","title":"quotas"},{"location":"reference/sdk/interfaces/PackDefinition/#ratelimits","text":"\u2022 Optional rateLimits : RateLimits","title":"rateLimits"},{"location":"reference/sdk/interfaces/PackDefinition/#shortdescription","text":"\u2022 shortDescription : string","title":"shortDescription"},{"location":"reference/sdk/interfaces/PackDefinition/#synctables","text":"\u2022 Optional syncTables : SyncTable [] Definitions of this pack's sync tables. See {@link SyncTable}.","title":"syncTables"},{"location":"reference/sdk/interfaces/PackDefinition/#systemconnectionauthentication","text":"\u2022 Optional systemConnectionAuthentication : SystemAuthentication If specified, this pack requires system credentials to be set up via Coda's admin console in order to work when no explicit connection is specified by the user.","title":"systemConnectionAuthentication"},{"location":"reference/sdk/interfaces/PackDefinition/#version","text":"\u2022 version : string The semantic version of the pack. This must be valid semantic version of the form 1 , 1.2 , or 1.2.3 . When uploading a pack version, the semantic version must be greater than any previously uploaded version.","title":"version"},{"location":"reference/sdk/interfaces/PackFormatMetadata/","text":"Hierarchy \u00b6 Omit < Format , \"matchers\" > \u21b3 PackFormatMetadata Properties \u00b6 formulaName \u00b6 \u2022 formulaName : string The name of the formula to invoke for values in columns using this format. This must correspond to the name of a regular, public formula defined in this pack. Inherited from \u00b6 Omit.formulaName Defined in \u00b6 types.ts:580 formulaNamespace \u00b6 \u2022 formulaNamespace : string deprecated Namespaces are being removed from the product. Inherited from \u00b6 Omit.formulaNamespace Defined in \u00b6 types.ts:575 hasNoConnection \u00b6 \u2022 Optional hasNoConnection : boolean deprecated No longer needed, will be inferred from the referenced formula. Inherited from \u00b6 Omit.hasNoConnection Defined in \u00b6 types.ts:582 instructions \u00b6 \u2022 Optional instructions : string A brief, optional explanation of how users should use this format, for example, what kinds of values they should put in columns using this format. Inherited from \u00b6 Omit.instructions Defined in \u00b6 types.ts:587 matchers \u00b6 \u2022 matchers : string [] Defined in \u00b6 compiled_types.ts:27 name \u00b6 \u2022 name : string The name of this column format. This will show to users in the column type chooser. Inherited from \u00b6 Omit.name Defined in \u00b6 types.ts:573 placeholder \u00b6 \u2022 Optional placeholder : string deprecated Currently unused. Inherited from \u00b6 Omit.placeholder Defined in \u00b6 types.ts:596","title":"PackFormatMetadata"},{"location":"reference/sdk/interfaces/PackFormatMetadata/#hierarchy","text":"Omit < Format , \"matchers\" > \u21b3 PackFormatMetadata","title":"Hierarchy"},{"location":"reference/sdk/interfaces/PackFormatMetadata/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/PackFormatMetadata/#formulaname","text":"\u2022 formulaName : string The name of the formula to invoke for values in columns using this format. This must correspond to the name of a regular, public formula defined in this pack.","title":"formulaName"},{"location":"reference/sdk/interfaces/PackFormatMetadata/#formulanamespace","text":"\u2022 formulaNamespace : string deprecated Namespaces are being removed from the product.","title":"formulaNamespace"},{"location":"reference/sdk/interfaces/PackFormatMetadata/#hasnoconnection","text":"\u2022 Optional hasNoConnection : boolean deprecated No longer needed, will be inferred from the referenced formula.","title":"hasNoConnection"},{"location":"reference/sdk/interfaces/PackFormatMetadata/#instructions","text":"\u2022 Optional instructions : string A brief, optional explanation of how users should use this format, for example, what kinds of values they should put in columns using this format.","title":"instructions"},{"location":"reference/sdk/interfaces/PackFormatMetadata/#matchers","text":"\u2022 matchers : string []","title":"matchers"},{"location":"reference/sdk/interfaces/PackFormatMetadata/#name","text":"\u2022 name : string The name of this column format. This will show to users in the column type chooser.","title":"name"},{"location":"reference/sdk/interfaces/PackFormatMetadata/#placeholder","text":"\u2022 Optional placeholder : string deprecated Currently unused.","title":"placeholder"},{"location":"reference/sdk/interfaces/PackFormulaDef/","text":"Type parameters \u00b6 Name Type ParamsT extends ParamDefs ResultT extends PackFormulaResult Hierarchy \u00b6 CommonPackFormulaDef < ParamsT > \u21b3 PackFormulaDef Properties \u00b6 cacheTtlSecs \u00b6 \u2022 Optional Readonly cacheTtlSecs : number How long formulas running with the same values should cache their results for. Inherited from \u00b6 CommonPackFormulaDef.cacheTtlSecs Defined in \u00b6 api_types.ts:235 connectionRequirement \u00b6 \u2022 Optional Readonly connectionRequirement : ConnectionRequirement Does this formula require a connection (aka an account)? Inherited from \u00b6 CommonPackFormulaDef.connectionRequirement Defined in \u00b6 api_types.ts:227 description \u00b6 \u2022 Readonly description : string A brief description of what the formula does. Inherited from \u00b6 CommonPackFormulaDef.description Defined in \u00b6 api_types.ts:201 examples \u00b6 \u2022 Optional Readonly examples : { params : PackFormulaValue [] ; result : PackFormulaResult }[] Sample inputs and outputs demonstrating usage of this formula. Inherited from \u00b6 CommonPackFormulaDef.examples Defined in \u00b6 api_types.ts:216 extraOAuthScopes \u00b6 \u2022 Optional Readonly extraOAuthScopes : string [] OAuth scopes that the formula needs that weren't requested in the pack's overall authentication config. For example, a Slack pack can have one formula that needs admin privileges, but non-admins can use the bulk of the pack without those privileges. Coda will give users help in understanding that they need additional authentication to use a formula with extra OAuth scopes. Note that these scopes will always be requested in addition to the default scopes for the pack, so an end user must have both sets of permissions. Inherited from \u00b6 CommonPackFormulaDef.extraOAuthScopes Defined in \u00b6 api_types.ts:257 isAction \u00b6 \u2022 Optional Readonly isAction : boolean Does this formula take an action (vs retrieve data or make a calculation)? Actions are presented as buttons in the Coda UI. Inherited from \u00b6 CommonPackFormulaDef.isAction Defined in \u00b6 api_types.ts:222 isExperimental \u00b6 \u2022 Optional Readonly isExperimental : boolean If specified, the formula will not be suggested to users in Coda's formula autocomplete. The formula can still be invoked by manually typing its full name. Inherited from \u00b6 CommonPackFormulaDef.isExperimental Defined in \u00b6 api_types.ts:241 isSystem \u00b6 \u2022 Optional Readonly isSystem : boolean Whether this is a formula that will be used by Coda internally and not exposed directly to users. Not for use by packs that are not authored by Coda. Inherited from \u00b6 CommonPackFormulaDef.isSystem Defined in \u00b6 api_types.ts:247 name \u00b6 \u2022 Readonly name : string The name of the formula, used to invoke it. Inherited from \u00b6 CommonPackFormulaDef.name Defined in \u00b6 api_types.ts:196 network \u00b6 \u2022 Optional Readonly network : Network deprecated use isAction and connectionRequirement instead Inherited from \u00b6 CommonPackFormulaDef.network Defined in \u00b6 api_types.ts:230 parameters \u00b6 \u2022 Readonly parameters : ParamsT The parameter inputs to the formula, if any. Inherited from \u00b6 CommonPackFormulaDef.parameters Defined in \u00b6 api_types.ts:206 varargParameters \u00b6 \u2022 Optional Readonly varargParameters : ParamDefs Variable argument parameters, used if this formula should accept arbitrary numbers of inputs. Inherited from \u00b6 CommonPackFormulaDef.varargParameters Defined in \u00b6 api_types.ts:211 Methods \u00b6 execute \u00b6 \u25b8 execute ( params , context ): ResultT | Promise < ResultT > Parameters \u00b6 Name Type params ParamValues < ParamsT > context ExecutionContext Returns \u00b6 ResultT | Promise < ResultT > Defined in \u00b6 api.ts:356","title":"PackFormulaDef"},{"location":"reference/sdk/interfaces/PackFormulaDef/#type-parameters","text":"Name Type ParamsT extends ParamDefs ResultT extends PackFormulaResult","title":"Type parameters"},{"location":"reference/sdk/interfaces/PackFormulaDef/#hierarchy","text":"CommonPackFormulaDef < ParamsT > \u21b3 PackFormulaDef","title":"Hierarchy"},{"location":"reference/sdk/interfaces/PackFormulaDef/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/PackFormulaDef/#cachettlsecs","text":"\u2022 Optional Readonly cacheTtlSecs : number How long formulas running with the same values should cache their results for.","title":"cacheTtlSecs"},{"location":"reference/sdk/interfaces/PackFormulaDef/#connectionrequirement","text":"\u2022 Optional Readonly connectionRequirement : ConnectionRequirement Does this formula require a connection (aka an account)?","title":"connectionRequirement"},{"location":"reference/sdk/interfaces/PackFormulaDef/#description","text":"\u2022 Readonly description : string A brief description of what the formula does.","title":"description"},{"location":"reference/sdk/interfaces/PackFormulaDef/#examples","text":"\u2022 Optional Readonly examples : { params : PackFormulaValue [] ; result : PackFormulaResult }[] Sample inputs and outputs demonstrating usage of this formula.","title":"examples"},{"location":"reference/sdk/interfaces/PackFormulaDef/#extraoauthscopes","text":"\u2022 Optional Readonly extraOAuthScopes : string [] OAuth scopes that the formula needs that weren't requested in the pack's overall authentication config. For example, a Slack pack can have one formula that needs admin privileges, but non-admins can use the bulk of the pack without those privileges. Coda will give users help in understanding that they need additional authentication to use a formula with extra OAuth scopes. Note that these scopes will always be requested in addition to the default scopes for the pack, so an end user must have both sets of permissions.","title":"extraOAuthScopes"},{"location":"reference/sdk/interfaces/PackFormulaDef/#isaction","text":"\u2022 Optional Readonly isAction : boolean Does this formula take an action (vs retrieve data or make a calculation)? Actions are presented as buttons in the Coda UI.","title":"isAction"},{"location":"reference/sdk/interfaces/PackFormulaDef/#isexperimental","text":"\u2022 Optional Readonly isExperimental : boolean If specified, the formula will not be suggested to users in Coda's formula autocomplete. The formula can still be invoked by manually typing its full name.","title":"isExperimental"},{"location":"reference/sdk/interfaces/PackFormulaDef/#issystem","text":"\u2022 Optional Readonly isSystem : boolean Whether this is a formula that will be used by Coda internally and not exposed directly to users. Not for use by packs that are not authored by Coda.","title":"isSystem"},{"location":"reference/sdk/interfaces/PackFormulaDef/#name","text":"\u2022 Readonly name : string The name of the formula, used to invoke it.","title":"name"},{"location":"reference/sdk/interfaces/PackFormulaDef/#network","text":"\u2022 Optional Readonly network : Network deprecated use isAction and connectionRequirement instead","title":"network"},{"location":"reference/sdk/interfaces/PackFormulaDef/#parameters","text":"\u2022 Readonly parameters : ParamsT The parameter inputs to the formula, if any.","title":"parameters"},{"location":"reference/sdk/interfaces/PackFormulaDef/#varargparameters","text":"\u2022 Optional Readonly varargParameters : ParamDefs Variable argument parameters, used if this formula should accept arbitrary numbers of inputs.","title":"varargParameters"},{"location":"reference/sdk/interfaces/PackFormulaDef/#methods","text":"","title":"Methods"},{"location":"reference/sdk/interfaces/PackFormulaDef/#execute","text":"\u25b8 execute ( params , context ): ResultT | Promise < ResultT >","title":"execute"},{"location":"reference/sdk/interfaces/PackFormulas/","text":"Indexable \u00b6 \u25aa [namespace: string ]: Formula []","title":"PackFormulas"},{"location":"reference/sdk/interfaces/PackFormulas/#indexable","text":"\u25aa [namespace: string ]: Formula []","title":"Indexable"},{"location":"reference/sdk/interfaces/PackFormulasMetadata/","text":"Indexable \u00b6 \u25aa [namespace: string ]: PackFormulaMetadata []","title":"PackFormulasMetadata"},{"location":"reference/sdk/interfaces/PackFormulasMetadata/#indexable","text":"\u25aa [namespace: string ]: PackFormulaMetadata []","title":"Indexable"},{"location":"reference/sdk/interfaces/PackVersionDefinition/","text":"The definition of the contents of a Pack at a specific version. This is the heart of the implementation of a Pack. Hierarchy \u00b6 PackVersionDefinition \u21b3 PackDefinition Properties \u00b6 defaultAuthentication \u00b6 \u2022 Optional defaultAuthentication : Authentication If specified, the user must provide personal authentication credentials before using the pack. Defined in \u00b6 types.ts:684 formats \u00b6 \u2022 Optional formats : Format [] Definitions of this pack's column formats. See Format . Defined in \u00b6 types.ts:720 formulaNamespace \u00b6 \u2022 Optional formulaNamespace : string deprecated Defined in \u00b6 types.ts:706 formulas \u00b6 \u2022 Optional formulas : PackFormulas | Formula < ParamDefs >[] Definitions of this pack's formulas. See Formula . Note that button actions are also defind here. Buttons are simply formulas with isAction: true . Note also, this should always be an array of Formulas. The PackFormulas object structure is deprecated and will be removed shortly. Defined in \u00b6 types.ts:716 networkDomains \u00b6 \u2022 Optional networkDomains : string [] Any domain(s) to which this pack makes fetcher requests. The domains this pack connects to must be declared up front here, both to clearly communicate to users what a pack is capable of connecting to, and for security reasons. These network domains are enforced at execution time: any fetcher request to a domain not listed here will be rejected. Only one network domain is allowed by default. If your pack has needs to connect to multiple domains contact Coda support for approval. Defined in \u00b6 types.ts:699 syncTables \u00b6 \u2022 Optional syncTables : SyncTable [] Definitions of this pack's sync tables. See {@link SyncTable}. Defined in \u00b6 types.ts:724 systemConnectionAuthentication \u00b6 \u2022 Optional systemConnectionAuthentication : SystemAuthentication If specified, this pack requires system credentials to be set up via Coda's admin console in order to work when no explicit connection is specified by the user. Defined in \u00b6 types.ts:689 version \u00b6 \u2022 version : string The semantic version of the pack. This must be valid semantic version of the form 1 , 1.2 , or 1.2.3 . When uploading a pack version, the semantic version must be greater than any previously uploaded version. Defined in \u00b6 types.ts:680","title":"PackVersionDefinition"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#hierarchy","text":"PackVersionDefinition \u21b3 PackDefinition","title":"Hierarchy"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#defaultauthentication","text":"\u2022 Optional defaultAuthentication : Authentication If specified, the user must provide personal authentication credentials before using the pack.","title":"defaultAuthentication"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#formats","text":"\u2022 Optional formats : Format [] Definitions of this pack's column formats. See Format .","title":"formats"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#formulanamespace","text":"\u2022 Optional formulaNamespace : string deprecated","title":"formulaNamespace"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#formulas","text":"\u2022 Optional formulas : PackFormulas | Formula < ParamDefs >[] Definitions of this pack's formulas. See Formula . Note that button actions are also defind here. Buttons are simply formulas with isAction: true . Note also, this should always be an array of Formulas. The PackFormulas object structure is deprecated and will be removed shortly.","title":"formulas"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#networkdomains","text":"\u2022 Optional networkDomains : string [] Any domain(s) to which this pack makes fetcher requests. The domains this pack connects to must be declared up front here, both to clearly communicate to users what a pack is capable of connecting to, and for security reasons. These network domains are enforced at execution time: any fetcher request to a domain not listed here will be rejected. Only one network domain is allowed by default. If your pack has needs to connect to multiple domains contact Coda support for approval.","title":"networkDomains"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#synctables","text":"\u2022 Optional syncTables : SyncTable [] Definitions of this pack's sync tables. See {@link SyncTable}.","title":"syncTables"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#systemconnectionauthentication","text":"\u2022 Optional systemConnectionAuthentication : SystemAuthentication If specified, this pack requires system credentials to be set up via Coda's admin console in order to work when no explicit connection is specified by the user.","title":"systemConnectionAuthentication"},{"location":"reference/sdk/interfaces/PackVersionDefinition/#version","text":"\u2022 version : string The semantic version of the pack. This must be valid semantic version of the form 1 , 1.2 , or 1.2.3 . When uploading a pack version, the semantic version must be greater than any previously uploaded version.","title":"version"},{"location":"reference/sdk/interfaces/ParamDef/","text":"Type parameters \u00b6 Name Type T extends UnionType Properties \u00b6 autocomplete \u00b6 \u2022 Optional autocomplete : MetadataFormula A MetadataFormula that returns valid values for this parameter, optionally matching a search query. This can be useful both if there are a fixed number of valid values for the parameter, or if the valid values from the parameter can be looked up from some API. Use makeMetadataFormula to wrap a function that implements your autocomplete logic. Typically once you have fetched the list of matching values, you'll use autocompleteSearchObjects to handle searching over those values. If you have a hardcoded list of valid values, you would only need to use makeSimpleAutocompleteMetadataFormula . Defined in \u00b6 api_types.ts:164 defaultValue \u00b6 \u2022 Optional defaultValue : DefaultValueType < T > The default value to be used for this parameter if it is not specified by the user. Defined in \u00b6 api_types.ts:168 description \u00b6 \u2022 description : string A brief description of what this parameter is used for, shown to the user when invoking the formula. Defined in \u00b6 api_types.ts:145 hidden \u00b6 \u2022 Optional hidden : boolean Defined in \u00b6 api_types.ts:151 name \u00b6 \u2022 name : string The name of the parameter, which will be shown to the user when invoking this formula. Defined in \u00b6 api_types.ts:137 optional \u00b6 \u2022 Optional optional : boolean Whether this parameter can be omitted when invoking the formula. All optional parameters must come after all non-optional parameters. Defined in \u00b6 api_types.ts:150 type \u00b6 \u2022 type : T The data type of this parameter (string, number, etc). Defined in \u00b6 api_types.ts:141","title":"ParamDef"},{"location":"reference/sdk/interfaces/ParamDef/#type-parameters","text":"Name Type T extends UnionType","title":"Type parameters"},{"location":"reference/sdk/interfaces/ParamDef/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/ParamDef/#autocomplete","text":"\u2022 Optional autocomplete : MetadataFormula A MetadataFormula that returns valid values for this parameter, optionally matching a search query. This can be useful both if there are a fixed number of valid values for the parameter, or if the valid values from the parameter can be looked up from some API. Use makeMetadataFormula to wrap a function that implements your autocomplete logic. Typically once you have fetched the list of matching values, you'll use autocompleteSearchObjects to handle searching over those values. If you have a hardcoded list of valid values, you would only need to use makeSimpleAutocompleteMetadataFormula .","title":"autocomplete"},{"location":"reference/sdk/interfaces/ParamDef/#defaultvalue","text":"\u2022 Optional defaultValue : DefaultValueType < T > The default value to be used for this parameter if it is not specified by the user.","title":"defaultValue"},{"location":"reference/sdk/interfaces/ParamDef/#description","text":"\u2022 description : string A brief description of what this parameter is used for, shown to the user when invoking the formula.","title":"description"},{"location":"reference/sdk/interfaces/ParamDef/#hidden","text":"\u2022 Optional hidden : boolean","title":"hidden"},{"location":"reference/sdk/interfaces/ParamDef/#name","text":"\u2022 name : string The name of the parameter, which will be shown to the user when invoking this formula.","title":"name"},{"location":"reference/sdk/interfaces/ParamDef/#optional","text":"\u2022 Optional optional : boolean Whether this parameter can be omitted when invoking the formula. All optional parameters must come after all non-optional parameters.","title":"optional"},{"location":"reference/sdk/interfaces/ParamDef/#type","text":"\u2022 type : T The data type of this parameter (string, number, etc).","title":"type"},{"location":"reference/sdk/interfaces/ScaleSchema/","text":"Hierarchy \u00b6 NumberSchema \u21b3 ScaleSchema Properties \u00b6 codaType \u00b6 \u2022 codaType : Scale Overrides \u00b6 NumberSchema . codaType Defined in \u00b6 schema.ts:114 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 NumberSchema . description Defined in \u00b6 schema.ts:75 icon \u00b6 \u2022 icon : string Defined in \u00b6 schema.ts:116 maximum \u00b6 \u2022 maximum : number Defined in \u00b6 schema.ts:115 type \u00b6 \u2022 type : Number Inherited from \u00b6 NumberSchema . type Defined in \u00b6 schema.ts:83","title":"ScaleSchema"},{"location":"reference/sdk/interfaces/ScaleSchema/#hierarchy","text":"NumberSchema \u21b3 ScaleSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/ScaleSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/ScaleSchema/#codatype","text":"\u2022 codaType : Scale","title":"codaType"},{"location":"reference/sdk/interfaces/ScaleSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/ScaleSchema/#icon","text":"\u2022 icon : string","title":"icon"},{"location":"reference/sdk/interfaces/ScaleSchema/#maximum","text":"\u2022 maximum : number","title":"maximum"},{"location":"reference/sdk/interfaces/ScaleSchema/#type","text":"\u2022 type : Number","title":"type"},{"location":"reference/sdk/interfaces/SimpleAutocompleteOption/","text":"Properties \u00b6 display \u00b6 \u2022 display : string Defined in \u00b6 api.ts:712 value \u00b6 \u2022 value : string | number Defined in \u00b6 api.ts:713","title":"SimpleAutocompleteOption"},{"location":"reference/sdk/interfaces/SimpleAutocompleteOption/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/SimpleAutocompleteOption/#display","text":"\u2022 display : string","title":"display"},{"location":"reference/sdk/interfaces/SimpleAutocompleteOption/#value","text":"\u2022 value : string | number","title":"value"},{"location":"reference/sdk/interfaces/SliderSchema/","text":"Hierarchy \u00b6 NumberSchema \u21b3 SliderSchema Properties \u00b6 codaType \u00b6 \u2022 codaType : Slider Overrides \u00b6 NumberSchema . codaType Defined in \u00b6 schema.ts:107 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 NumberSchema . description Defined in \u00b6 schema.ts:75 maximum \u00b6 \u2022 Optional maximum : string | number Defined in \u00b6 schema.ts:109 minimum \u00b6 \u2022 Optional minimum : string | number Defined in \u00b6 schema.ts:108 step \u00b6 \u2022 Optional step : string | number Defined in \u00b6 schema.ts:110 type \u00b6 \u2022 type : Number Inherited from \u00b6 NumberSchema . type Defined in \u00b6 schema.ts:83","title":"SliderSchema"},{"location":"reference/sdk/interfaces/SliderSchema/#hierarchy","text":"NumberSchema \u21b3 SliderSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/SliderSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/SliderSchema/#codatype","text":"\u2022 codaType : Slider","title":"codaType"},{"location":"reference/sdk/interfaces/SliderSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/SliderSchema/#maximum","text":"\u2022 Optional maximum : string | number","title":"maximum"},{"location":"reference/sdk/interfaces/SliderSchema/#minimum","text":"\u2022 Optional minimum : string | number","title":"minimum"},{"location":"reference/sdk/interfaces/SliderSchema/#step","text":"\u2022 Optional step : string | number","title":"step"},{"location":"reference/sdk/interfaces/SliderSchema/#type","text":"\u2022 type : Number","title":"type"},{"location":"reference/sdk/interfaces/StringSchema/","text":"Type parameters \u00b6 Name Type T extends StringHintTypes``StringHintTypes Hierarchy \u00b6 BaseSchema \u21b3 StringSchema \u21b3\u21b3 DurationSchema Properties \u00b6 codaType \u00b6 \u2022 Optional codaType : T Defined in \u00b6 schema.ts:157 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 BaseSchema.description Defined in \u00b6 schema.ts:75 type \u00b6 \u2022 type : String Defined in \u00b6 schema.ts:156","title":"StringSchema"},{"location":"reference/sdk/interfaces/StringSchema/#type-parameters","text":"Name Type T extends StringHintTypes``StringHintTypes","title":"Type parameters"},{"location":"reference/sdk/interfaces/StringSchema/#hierarchy","text":"BaseSchema \u21b3 StringSchema \u21b3\u21b3 DurationSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/StringSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/StringSchema/#codatype","text":"\u2022 Optional codaType : T","title":"codaType"},{"location":"reference/sdk/interfaces/StringSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/StringSchema/#type","text":"\u2022 type : String","title":"type"},{"location":"reference/sdk/interfaces/SyncExecutionContext/","text":"Hierarchy \u00b6 ExecutionContext \u21b3 SyncExecutionContext Properties \u00b6 endpoint \u00b6 \u2022 Optional Readonly endpoint : string Inherited from \u00b6 ExecutionContext . endpoint Defined in \u00b6 api_types.ts:340 fetcher \u00b6 \u2022 Readonly fetcher : Fetcher Inherited from \u00b6 ExecutionContext . fetcher Defined in \u00b6 api_types.ts:337 invocationLocation \u00b6 \u2022 Readonly invocationLocation : InvocationLocation Inherited from \u00b6 ExecutionContext . invocationLocation Defined in \u00b6 api_types.ts:341 invocationToken \u00b6 \u2022 Readonly invocationToken : string Inherited from \u00b6 ExecutionContext . invocationToken Defined in \u00b6 api_types.ts:346 logger \u00b6 \u2022 Readonly logger : Logger Inherited from \u00b6 ExecutionContext . logger Defined in \u00b6 api_types.ts:339 sync \u00b6 \u2022 Readonly sync : Sync Overrides \u00b6 ExecutionContext . sync Defined in \u00b6 api_types.ts:351 temporaryBlobStorage \u00b6 \u2022 Readonly temporaryBlobStorage : TemporaryBlobStorage Inherited from \u00b6 ExecutionContext . temporaryBlobStorage Defined in \u00b6 api_types.ts:338 timezone \u00b6 \u2022 Readonly timezone : string Inherited from \u00b6 ExecutionContext . timezone Defined in \u00b6 api_types.ts:342","title":"SyncExecutionContext"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#hierarchy","text":"ExecutionContext \u21b3 SyncExecutionContext","title":"Hierarchy"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#endpoint","text":"\u2022 Optional Readonly endpoint : string","title":"endpoint"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#fetcher","text":"\u2022 Readonly fetcher : Fetcher","title":"fetcher"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#invocationlocation","text":"\u2022 Readonly invocationLocation : InvocationLocation","title":"invocationLocation"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#invocationtoken","text":"\u2022 Readonly invocationToken : string","title":"invocationToken"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#logger","text":"\u2022 Readonly logger : Logger","title":"logger"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#sync","text":"\u2022 Readonly sync : Sync","title":"sync"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#temporaryblobstorage","text":"\u2022 Readonly temporaryBlobStorage : TemporaryBlobStorage","title":"temporaryBlobStorage"},{"location":"reference/sdk/interfaces/SyncExecutionContext/#timezone","text":"\u2022 Readonly timezone : string","title":"timezone"},{"location":"reference/sdk/interfaces/SyncFormulaResult/","text":"Type parameters \u00b6 Name Type ResultT extends object Properties \u00b6 continuation \u00b6 \u2022 Optional continuation : Continuation Defined in \u00b6 api.ts:436 result \u00b6 \u2022 result : ResultT [] Defined in \u00b6 api.ts:435","title":"SyncFormulaResult"},{"location":"reference/sdk/interfaces/SyncFormulaResult/#type-parameters","text":"Name Type ResultT extends object","title":"Type parameters"},{"location":"reference/sdk/interfaces/SyncFormulaResult/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/SyncFormulaResult/#continuation","text":"\u2022 Optional continuation : Continuation","title":"continuation"},{"location":"reference/sdk/interfaces/SyncFormulaResult/#result","text":"\u2022 result : ResultT []","title":"result"},{"location":"reference/sdk/interfaces/SyncTableDef/","text":"Type definition for a Sync Table. Should not be necessary to use directly, instead, define sync tables using makeSyncTable . Type parameters \u00b6 Name Type K extends string L extends string ParamDefsT extends ParamDefs SchemaT extends ObjectSchema < K , L > Hierarchy \u00b6 SyncTableDef \u21b3 DynamicSyncTableDef Properties \u00b6 entityName \u00b6 \u2022 Optional entityName : string Defined in \u00b6 api.ts:118 getSchema \u00b6 \u2022 Optional getSchema : MetadataFormula Defined in \u00b6 api.ts:117 getter \u00b6 \u2022 getter : SyncFormula < K , L , ParamDefsT , SchemaT > Defined in \u00b6 api.ts:116 name \u00b6 \u2022 name : string Defined in \u00b6 api.ts:114 schema \u00b6 \u2022 schema : SchemaT Defined in \u00b6 api.ts:115","title":"SyncTableDef"},{"location":"reference/sdk/interfaces/SyncTableDef/#type-parameters","text":"Name Type K extends string L extends string ParamDefsT extends ParamDefs SchemaT extends ObjectSchema < K , L >","title":"Type parameters"},{"location":"reference/sdk/interfaces/SyncTableDef/#hierarchy","text":"SyncTableDef \u21b3 DynamicSyncTableDef","title":"Hierarchy"},{"location":"reference/sdk/interfaces/SyncTableDef/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/SyncTableDef/#entityname","text":"\u2022 Optional entityName : string","title":"entityName"},{"location":"reference/sdk/interfaces/SyncTableDef/#getschema","text":"\u2022 Optional getSchema : MetadataFormula","title":"getSchema"},{"location":"reference/sdk/interfaces/SyncTableDef/#getter","text":"\u2022 getter : SyncFormula < K , L , ParamDefsT , SchemaT >","title":"getter"},{"location":"reference/sdk/interfaces/SyncTableDef/#name","text":"\u2022 name : string","title":"name"},{"location":"reference/sdk/interfaces/SyncTableDef/#schema","text":"\u2022 schema : SchemaT","title":"schema"},{"location":"reference/sdk/interfaces/TemporaryBlobStorage/","text":"Methods \u00b6 storeBlob \u00b6 \u25b8 storeBlob ( blobData , contentType , opts? ): Promise < string > Parameters \u00b6 Name Type blobData Buffer contentType string opts? Object opts.expiryMs? number Returns \u00b6 Promise < string > Defined in \u00b6 api_types.ts:312 storeUrl \u00b6 \u25b8 storeUrl ( url , opts? ): Promise < string > Parameters \u00b6 Name Type url string opts? Object opts.expiryMs? number Returns \u00b6 Promise < string > Defined in \u00b6 api_types.ts:311","title":"TemporaryBlobStorage"},{"location":"reference/sdk/interfaces/TemporaryBlobStorage/#methods","text":"","title":"Methods"},{"location":"reference/sdk/interfaces/TemporaryBlobStorage/#storeblob","text":"\u25b8 storeBlob ( blobData , contentType , opts? ): Promise < string >","title":"storeBlob"},{"location":"reference/sdk/interfaces/TemporaryBlobStorage/#storeurl","text":"\u25b8 storeUrl ( url , opts? ): Promise < string >","title":"storeUrl"},{"location":"reference/sdk/interfaces/TimeSchema/","text":"Hierarchy \u00b6 BaseDateSchema \u21b3 TimeSchema Properties \u00b6 codaType \u00b6 \u2022 codaType : Time Defined in \u00b6 schema.ts:130 description \u00b6 \u2022 Optional description : string Inherited from \u00b6 BaseDateSchema.description Defined in \u00b6 schema.ts:75 format \u00b6 \u2022 Optional format : string Defined in \u00b6 schema.ts:132 type \u00b6 \u2022 type : Number | String Inherited from \u00b6 BaseDateSchema.type Defined in \u00b6 schema.ts:120","title":"TimeSchema"},{"location":"reference/sdk/interfaces/TimeSchema/#hierarchy","text":"BaseDateSchema \u21b3 TimeSchema","title":"Hierarchy"},{"location":"reference/sdk/interfaces/TimeSchema/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/TimeSchema/#codatype","text":"\u2022 codaType : Time","title":"codaType"},{"location":"reference/sdk/interfaces/TimeSchema/#description","text":"\u2022 Optional description : string","title":"description"},{"location":"reference/sdk/interfaces/TimeSchema/#format","text":"\u2022 Optional format : string","title":"format"},{"location":"reference/sdk/interfaces/TimeSchema/#type","text":"\u2022 type : Number | String","title":"type"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/","text":"Authenticate using HTTP Basic authorization. The user provides a username and password (sometimes optional) which are included as an HTTP header according to the Basic auth standard. See https://en.wikipedia.org/wiki/Basic_access_authentication Hierarchy \u00b6 BaseAuthentication \u21b3 WebBasicAuthentication Properties \u00b6 defaultConnectionType \u00b6 \u2022 Optional defaultConnectionType : DefaultConnectionType Indicates the defualt manner in which a user's account is expected to be used by this pack, e.g. is this account used for retrieving data, taking actions, or both. See https://help.coda.io/en/articles/4587167-what-can-coda-access-with-packs#h_40472431f0 Inherited from \u00b6 BaseAuthentication.defaultConnectionType Defined in \u00b6 types.ts:207 endpointDomain \u00b6 \u2022 Optional endpointDomain : string When requiresEndpointUrl is set to true this should be the root domain that all endpoints share. For example, this value would be \"example.com\" if specific endpoints looked like {custom-subdomain}.example.com. For packs that make requests to multiple domains (uncommon), this should be the domain within networkDomains that this configuration applies to. Inherited from \u00b6 BaseAuthentication.endpointDomain Defined in \u00b6 types.ts:229 getConnectionName \u00b6 \u2022 Optional getConnectionName : MetadataFormula Inherited from \u00b6 BaseAuthentication.getConnectionName Defined in \u00b6 types.ts:199 getConnectionUserId \u00b6 \u2022 Optional getConnectionUserId : MetadataFormula Inherited from \u00b6 BaseAuthentication.getConnectionUserId Defined in \u00b6 types.ts:200 instructionsUrl \u00b6 \u2022 Optional instructionsUrl : string A link to a help article or other page with more instructions about how to set up an account for this pack. Inherited from \u00b6 BaseAuthentication.instructionsUrl Defined in \u00b6 types.ts:212 postSetup \u00b6 \u2022 Optional postSetup : SetEndpoint [] One or more setup steps to run after the user has set up the account, before completing installation of the pack. This is not common. Inherited from \u00b6 BaseAuthentication.postSetup Defined in \u00b6 types.ts:235 requiresEndpointUrl \u00b6 \u2022 Optional requiresEndpointUrl : boolean If true, indicates this has pack has a specific endpoint domain for each account, that is used as the basis of HTTP requests. For example, API requests are made to .example.com rather than example.com. If true, the user will be prompted to provide their specific endpoint domain when creating a new account. Inherited from \u00b6 BaseAuthentication.requiresEndpointUrl Defined in \u00b6 types.ts:220 type \u00b6 \u2022 type : WebBasic Defined in \u00b6 types.ts:394 uxConfig \u00b6 \u2022 Optional uxConfig : Object Configuration for labels to show in the UI when the user sets up a new acount. Type declaration \u00b6 Name Type Description placeholderPassword? string A placeholder value for the text input where the user will enter a password. placeholderUsername? string A placeholder value for the text input where the user will enter a username. usernameOnly? boolean If true, only a username input will be shown to the user. Some services pass API keys in the username field and do not require a password. Defined in \u00b6 types.ts:398","title":"WebBasicAuthentication"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#hierarchy","text":"BaseAuthentication \u21b3 WebBasicAuthentication","title":"Hierarchy"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#properties","text":"","title":"Properties"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#defaultconnectiontype","text":"\u2022 Optional defaultConnectionType : DefaultConnectionType Indicates the defualt manner in which a user's account is expected to be used by this pack, e.g. is this account used for retrieving data, taking actions, or both. See https://help.coda.io/en/articles/4587167-what-can-coda-access-with-packs#h_40472431f0","title":"defaultConnectionType"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#endpointdomain","text":"\u2022 Optional endpointDomain : string When requiresEndpointUrl is set to true this should be the root domain that all endpoints share. For example, this value would be \"example.com\" if specific endpoints looked like {custom-subdomain}.example.com. For packs that make requests to multiple domains (uncommon), this should be the domain within networkDomains that this configuration applies to.","title":"endpointDomain"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#getconnectionname","text":"\u2022 Optional getConnectionName : MetadataFormula","title":"getConnectionName"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#getconnectionuserid","text":"\u2022 Optional getConnectionUserId : MetadataFormula","title":"getConnectionUserId"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#instructionsurl","text":"\u2022 Optional instructionsUrl : string A link to a help article or other page with more instructions about how to set up an account for this pack.","title":"instructionsUrl"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#postsetup","text":"\u2022 Optional postSetup : SetEndpoint [] One or more setup steps to run after the user has set up the account, before completing installation of the pack. This is not common.","title":"postSetup"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#requiresendpointurl","text":"\u2022 Optional requiresEndpointUrl : boolean If true, indicates this has pack has a specific endpoint domain for each account, that is used as the basis of HTTP requests. For example, API requests are made to .example.com rather than example.com. If true, the user will be prompted to provide their specific endpoint domain when creating a new account.","title":"requiresEndpointUrl"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#type","text":"\u2022 type : WebBasic","title":"type"},{"location":"reference/sdk/interfaces/WebBasicAuthentication/#uxconfig","text":"\u2022 Optional uxConfig : Object Configuration for labels to show in the UI when the user sets up a new acount.","title":"uxConfig"},{"location":"reference/sdk/types/Authentication/","text":"\u01ac Authentication : NoAuthentication | VariousAuthentication | HeaderBearerTokenAuthentication | CodaApiBearerTokenAuthentication | CustomHeaderTokenAuthentication | QueryParamTokenAuthentication | MultiQueryParamTokenAuthentication | OAuth2Authentication | WebBasicAuthentication | AWSSignature4Authentication The union of supported authentication methods. Defined in \u00b6 types.ts:441","title":"Authentication"},{"location":"reference/sdk/types/BasicPackDefinition/","text":"\u01ac BasicPackDefinition : Omit < PackVersionDefinition , \"version\" > A pack definition without an author-defined semantic version, for use in the web editor where Coda will manage versioning on behalf of the pack author. Defined in \u00b6 types.ts:669","title":"BasicPackDefinition"},{"location":"reference/sdk/types/DefaultValueType/","text":"\u01ac DefaultValueType < T >: T extends ArrayType < date > ? TypeOfMap < T > | PrecannedDateRange : TypeOfMap < T > Type parameters \u00b6 Name Type T extends UnionType Defined in \u00b6 api_types.ts:188","title":"DefaultValueType"},{"location":"reference/sdk/types/ExternalObjectPackFormula/","text":"\u01ac ExternalObjectPackFormula : ObjectPackFormulaMetadata Defined in \u00b6 compiled_types.ts:83","title":"ExternalObjectPackFormula"},{"location":"reference/sdk/types/ExternalPackFormat/","text":"\u01ac ExternalPackFormat : Format Defined in \u00b6 compiled_types.ts:85","title":"ExternalPackFormat"},{"location":"reference/sdk/types/ExternalPackFormatMetadata/","text":"\u01ac ExternalPackFormatMetadata : PackFormatMetadata Defined in \u00b6 compiled_types.ts:86","title":"ExternalPackFormatMetadata"},{"location":"reference/sdk/types/ExternalPackFormula/","text":"\u01ac ExternalPackFormula : PackFormulaMetadata Defined in \u00b6 compiled_types.ts:84","title":"ExternalPackFormula"},{"location":"reference/sdk/types/ExternalPackFormulas/","text":"\u01ac ExternalPackFormulas : PackFormulasMetadata | PackFormulaMetadata [] Defined in \u00b6 compiled_types.ts:82","title":"ExternalPackFormulas"},{"location":"reference/sdk/types/ExternalPackMetadata/","text":"\u01ac ExternalPackMetadata : ExternalPackVersionMetadata & Pick < PackMetadata , \"id\" | \"name\" | \"shortDescription\" | \"description\" | \"permissionsDescription\" | \"category\" | \"logoPath\" | \"exampleImages\" | \"exampleVideoIds\" | \"minimumFeatureSet\" | \"quotas\" | \"rateLimits\" | \"isSystem\" > Further stripped-down version of PackMetadata that contains only what the browser needs. Defined in \u00b6 compiled_types.ts:114","title":"ExternalPackMetadata"},{"location":"reference/sdk/types/ExternalSyncTable/","text":"\u01ac ExternalSyncTable : PackSyncTable Defined in \u00b6 compiled_types.ts:87","title":"ExternalSyncTable"},{"location":"reference/sdk/types/FetchMethodType/","text":"\u01ac FetchMethodType : typeof ValidFetchMethods [ number ] Defined in \u00b6 api_types.ts:282","title":"FetchMethodType"},{"location":"reference/sdk/types/Formula/","text":"\u01ac Formula < ParamDefsT >: NumericPackFormula < ParamDefsT > | StringPackFormula < ParamDefsT , any > | BooleanPackFormula < ParamDefsT > | ObjectPackFormula < ParamDefsT , Schema > Type parameters \u00b6 Name Type ParamDefsT extends ParamDefs ParamDefs Defined in \u00b6 api.ts:411","title":"Formula"},{"location":"reference/sdk/types/GenericDynamicSyncTable/","text":"\u01ac GenericDynamicSyncTable : DynamicSyncTableDef < any , any , ParamDefs , any > Type definition for a dynamic sync table. Should not be necessary to use directly, see makeDynamicSyncTable for defining a sync table. Defined in \u00b6 api.ts:188","title":"GenericDynamicSyncTable"},{"location":"reference/sdk/types/GenericObjectSchema/","text":"\u01ac GenericObjectSchema : ObjectSchema < string , string > Defined in \u00b6 schema.ts:174","title":"GenericObjectSchema"},{"location":"reference/sdk/types/GenericSyncFormula/","text":"\u01ac GenericSyncFormula : SyncFormula < any , any , ParamDefs , any > Type definition for the formula that implements a sync table. Should not be necessary to use directly, see makeSyncTable for defining a sync table. Defined in \u00b6 api.ts:170","title":"GenericSyncFormula"},{"location":"reference/sdk/types/GenericSyncFormulaResult/","text":"\u01ac GenericSyncFormulaResult : SyncFormulaResult < any > Type definition for the return value of a sync table. Should not be necessary to use directly, see makeSyncTable for defining a sync table. Defined in \u00b6 api.ts:176","title":"GenericSyncFormulaResult"},{"location":"reference/sdk/types/GenericSyncTable/","text":"\u01ac GenericSyncTable : SyncTableDef < any , any , ParamDefs , any > Type definition for a static (non-dynamic) sync table. Should not be necessary to use directly, see makeSyncTable for defining a sync table. Defined in \u00b6 api.ts:182","title":"GenericSyncTable"},{"location":"reference/sdk/types/LoggerParamType/","text":"\u01ac LoggerParamType : string | number | boolean | Record < any , any > Defined in \u00b6 api_types.ts:321","title":"LoggerParamType"},{"location":"reference/sdk/types/MetadataContext/","text":"\u01ac MetadataContext : Record < string , any > A context object that is provided to a metadata formula at execution time. For example, an autocomplete metadata formula for a parameter value may need to know the value of parameters that have already been selected. Those parameter values are provided in this context object. Defined in \u00b6 api.ts:672","title":"MetadataContext"},{"location":"reference/sdk/types/MetadataFormula/","text":"\u01ac MetadataFormula : ObjectPackFormula <[ ParamDef < string >, ParamDef < string >], any > Defined in \u00b6 api.ts:675","title":"MetadataFormula"},{"location":"reference/sdk/types/MetadataFormulaResultType/","text":"\u01ac MetadataFormulaResultType : string | number | MetadataFormulaObjectResultType Defined in \u00b6 api.ts:674","title":"MetadataFormulaResultType"},{"location":"reference/sdk/types/ObjectSchemaProperties/","text":"\u01ac ObjectSchemaProperties < K >: { [K2 in K | string]: Schema & ObjectSchemaProperty} Type parameters \u00b6 Name Type K extends string``never Defined in \u00b6 schema.ts:170","title":"ObjectSchemaProperties"},{"location":"reference/sdk/types/PackFormulaMetadata/","text":"\u01ac PackFormulaMetadata : Omit < TypedPackFormula , \"execute\" > Defined in \u00b6 api.ts:420","title":"PackFormulaMetadata"},{"location":"reference/sdk/types/PackFormulaResult/","text":"\u01ac PackFormulaResult : $Values < TypeMap > | PackFormulaResult [] Defined in \u00b6 api_types.ts:71","title":"PackFormulaResult"},{"location":"reference/sdk/types/PackFormulaValue/","text":"\u01ac PackFormulaValue : $Values < Omit < TypeMap , object >> | PackFormulaValue [] Defined in \u00b6 api_types.ts:70","title":"PackFormulaValue"},{"location":"reference/sdk/types/PackId/","text":"\u01ac PackId : number deprecated Use number in new code. Defined in \u00b6 types.ts:11","title":"PackId"},{"location":"reference/sdk/types/PackMetadata/","text":"\u01ac PackMetadata : PackVersionMetadata & Pick < PackDefinition , \"id\" | \"name\" | \"shortDescription\" | \"description\" | \"permissionsDescription\" | \"category\" | \"logoPath\" | \"exampleImages\" | \"exampleVideoIds\" | \"minimumFeatureSet\" | \"quotas\" | \"rateLimits\" | \"enabledConfigName\" | \"isSystem\" > Stripped-down version of PackDefinition that doesn't contain formula definitions. Defined in \u00b6 compiled_types.ts:60","title":"PackMetadata"},{"location":"reference/sdk/types/PackSyncTable/","text":"\u01ac PackSyncTable : Omit < SyncTable , \"getter\" | \"getName\" | \"getSchema\" | \"listDynamicUrls\" | \"getDisplayUrl\" > & { getDisplayUrl? : MetadataFormulaMetadata ; getName? : MetadataFormulaMetadata ; getSchema? : MetadataFormulaMetadata ; getter : PackFormulaMetadata ; hasDynamicSchema? : boolean ; isDynamic? : boolean ; listDynamicUrls? : MetadataFormulaMetadata } Defined in \u00b6 compiled_types.ts:13","title":"PackSyncTable"},{"location":"reference/sdk/types/PackVersionMetadata/","text":"\u01ac PackVersionMetadata : Omit < PackVersionDefinition , \"formulas\" | \"formats\" | \"defaultAuthentication\" | \"syncTables\" > & { defaultAuthentication? : AuthenticationMetadata ; formats : PackFormatMetadata [] ; formulas : PackFormulasMetadata | PackFormulaMetadata [] ; syncTables : PackSyncTable [] } Stripped-down version of PackVersionDefinition that doesn't contain formula definitions. Defined in \u00b6 compiled_types.ts:48","title":"PackVersionMetadata"},{"location":"reference/sdk/types/ParamDefs/","text":"\u01ac ParamDefs : [ ParamDef < UnionType >, ...ParamDef<UnionType>[]] | [] Defined in \u00b6 api_types.ts:173","title":"ParamDefs"},{"location":"reference/sdk/types/ParamValues/","text":"\u01ac ParamValues < ParamDefsT >: { [K in keyof ParamDefsT]: ParamDefsT[K] extends ParamDef<infer T> ? TypeOfMap<T> : never} & any [] Type parameters \u00b6 Name Type ParamDefsT extends ParamDefs Defined in \u00b6 api_types.ts:183","title":"ParamValues"},{"location":"reference/sdk/types/ParamsList/","text":"\u01ac ParamsList : ParamDef < UnionType >[] Defined in \u00b6 api_types.ts:175","title":"ParamsList"},{"location":"reference/sdk/types/Schema/","text":"\u01ac Schema : BooleanSchema | NumberSchema | StringSchema | ArraySchema | GenericObjectSchema Defined in \u00b6 schema.ts:230","title":"Schema"},{"location":"reference/sdk/types/SchemaType/","text":"\u01ac SchemaType < T >: T extends BooleanSchema ? boolean : T extends NumberSchema ? number : T extends StringSchema ? StringHintTypeToSchemaType < T [ \"codaType\" ]> : T extends ArraySchema ? SchemaType < T [ \"items\" ]>[] : T extends GenericObjectSchema ? PickOptional <{ [K in keyof T[\"properties\"]]: SchemaType<T[\"properties\"][K]>}, $Values <{ [K in keyof T[\"properties\"]]: T[\"properties\"][K] extends object ? K : never}>> : never Type parameters \u00b6 Name Type T extends Schema Defined in \u00b6 schema.ts:249","title":"SchemaType"},{"location":"reference/sdk/types/SystemAuthentication/","text":"\u01ac SystemAuthentication : HeaderBearerTokenAuthentication | CustomHeaderTokenAuthentication | QueryParamTokenAuthentication | MultiQueryParamTokenAuthentication | WebBasicAuthentication | AWSSignature4Authentication The union of authentication methods that are supported for system authentication, where the pack author provides credentials used in HTTP requests rather than the user. Defined in \u00b6 types.ts:498","title":"SystemAuthentication"},{"location":"reference/sdk/types/TypedPackFormula/","text":"\u01ac TypedPackFormula : Formula | GenericSyncFormula Defined in \u00b6 api.ts:417","title":"TypedPackFormula"}]}